
code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000612  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000666  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000666  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000698  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000080  00000000  00000000  000006d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001035  00000000  00000000  00000754  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006f7  00000000  00000000  00001789  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000006c1  00000000  00000000  00001e80  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000b4  00000000  00000000  00002544  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003e5  00000000  00000000  000025f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000520  00000000  00000000  000029dd  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00002efd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	8f 00       	.word	0x008f	; ????
  56:	ac 00       	.word	0x00ac	; ????
  58:	c9 00       	.word	0x00c9	; ????
  5a:	e6 00       	.word	0x00e6	; ????
  5c:	03 01       	movw	r0, r6
  5e:	20 01       	movw	r4, r0
  60:	3d 01       	movw	r6, r26
  62:	5a 01       	movw	r10, r20
  64:	77 01       	movw	r14, r14
  66:	94 01       	movw	r18, r8

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf e5       	ldi	r28, 0x5F	; 95
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 07 03 	jmp	0x60e	; 0x60e <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
 */ 

#include "Sess16/Task/ses.h"

int main(){
	test_code();
  80:	0e 94 45 00 	call	0x8a	; 0x8a <test_code>
	return 0;
  84:	80 e0       	ldi	r24, 0x00	; 0
  86:	90 e0       	ldi	r25, 0x00	; 0
  88:	08 95       	ret

0000008a <test_code>:

int test_code()
{
	u8 counter = 0;
	//7-segment
	DIO_setPinDir(DIO_PINC1,DIO_OUTPUT);
  8a:	61 e0       	ldi	r22, 0x01	; 1
  8c:	81 e1       	ldi	r24, 0x11	; 17
  8e:	0e 94 b1 01 	call	0x362	; 0x362 <DIO_setPinDir>
	DIO_setPinDir(DIO_PINC2,DIO_OUTPUT);
  92:	61 e0       	ldi	r22, 0x01	; 1
  94:	82 e1       	ldi	r24, 0x12	; 18
  96:	0e 94 b1 01 	call	0x362	; 0x362 <DIO_setPinDir>
	DIO_setPinDir(DIO_PINC3,DIO_OUTPUT);
  9a:	61 e0       	ldi	r22, 0x01	; 1
  9c:	83 e1       	ldi	r24, 0x13	; 19
  9e:	0e 94 b1 01 	call	0x362	; 0x362 <DIO_setPinDir>
	DIO_setPinDir(DIO_PINC4,DIO_OUTPUT);
  a2:	61 e0       	ldi	r22, 0x01	; 1
  a4:	84 e1       	ldi	r24, 0x14	; 20
  a6:	0e 94 b1 01 	call	0x362	; 0x362 <DIO_setPinDir>
	DIO_setPinDir(DIO_PINC5,DIO_OUTPUT);
  aa:	61 e0       	ldi	r22, 0x01	; 1
  ac:	85 e1       	ldi	r24, 0x15	; 21
  ae:	0e 94 b1 01 	call	0x362	; 0x362 <DIO_setPinDir>
	DIO_setPinDir(DIO_PINC6,DIO_OUTPUT);
  b2:	61 e0       	ldi	r22, 0x01	; 1
  b4:	86 e1       	ldi	r24, 0x16	; 22
  b6:	0e 94 b1 01 	call	0x362	; 0x362 <DIO_setPinDir>
	DIO_setPinDir(DIO_PINC7,DIO_OUTPUT);
  ba:	61 e0       	ldi	r22, 0x01	; 1
  bc:	87 e1       	ldi	r24, 0x17	; 23
  be:	0e 94 b1 01 	call	0x362	; 0x362 <DIO_setPinDir>
	//counter button
	DIO_setPinDir(DIO_PINA2,DIO_INPUT);
  c2:	60 e0       	ldi	r22, 0x00	; 0
  c4:	82 e0       	ldi	r24, 0x02	; 2
  c6:	0e 94 b1 01 	call	0x362	; 0x362 <DIO_setPinDir>
	DIO_setPullUp(DIO_PINA2);
  ca:	82 e0       	ldi	r24, 0x02	; 2
  cc:	0e 94 fd 02 	call	0x5fa	; 0x5fa <DIO_setPullUp>
	//reset button
	DIO_setPinDir(DIO_PINB6,DIO_INPUT);
  d0:	60 e0       	ldi	r22, 0x00	; 0
  d2:	8e e0       	ldi	r24, 0x0E	; 14
  d4:	0e 94 b1 01 	call	0x362	; 0x362 <DIO_setPinDir>
	DIO_setPullUp(DIO_PINB6);
  d8:	8e e0       	ldi	r24, 0x0E	; 14
  da:	0e 94 fd 02 	call	0x5fa	; 0x5fa <DIO_setPullUp>

#include "Sess16/Task/ses.h"

int test_code()
{
	u8 counter = 0;
  de:	c0 e0       	ldi	r28, 0x00	; 0
	DIO_setPinDir(DIO_PINB6,DIO_INPUT);
	DIO_setPullUp(DIO_PINB6);
	while (1)
	{
		//counter button is pressed
		if (DIO_readPinValue(DIO_PINA2)==DIO_LOW)
  e0:	82 e0       	ldi	r24, 0x02	; 2
  e2:	0e 94 c7 02 	call	0x58e	; 0x58e <DIO_readPinValue>
  e6:	81 11       	cpse	r24, r1
  e8:	0a c0       	rjmp	.+20     	; 0xfe <test_code+0x74>
		{
			counter++;
  ea:	cf 5f       	subi	r28, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ec:	2f ef       	ldi	r18, 0xFF	; 255
  ee:	85 ea       	ldi	r24, 0xA5	; 165
  f0:	9e e0       	ldi	r25, 0x0E	; 14
  f2:	21 50       	subi	r18, 0x01	; 1
  f4:	80 40       	sbci	r24, 0x00	; 0
  f6:	90 40       	sbci	r25, 0x00	; 0
  f8:	e1 f7       	brne	.-8      	; 0xf2 <test_code+0x68>
  fa:	00 c0       	rjmp	.+0      	; 0xfc <test_code+0x72>
  fc:	00 00       	nop
			_delay_ms(300);
		}
		//reset button is pressed
		if (DIO_readPinValue(DIO_PINB6)==DIO_LOW)
  fe:	8e e0       	ldi	r24, 0x0E	; 14
 100:	0e 94 c7 02 	call	0x58e	; 0x58e <DIO_readPinValue>
 104:	81 11       	cpse	r24, r1
 106:	01 c0       	rjmp	.+2      	; 0x10a <test_code+0x80>
		{
			counter=0;
 108:	c0 e0       	ldi	r28, 0x00	; 0
		}
		switch(counter){
 10a:	8c 2f       	mov	r24, r28
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	8a 30       	cpi	r24, 0x0A	; 10
 110:	91 05       	cpc	r25, r1
 112:	30 f7       	brcc	.-52     	; 0xe0 <test_code+0x56>
 114:	fc 01       	movw	r30, r24
 116:	e6 5d       	subi	r30, 0xD6	; 214
 118:	ff 4f       	sbci	r31, 0xFF	; 255
 11a:	0c 94 01 03 	jmp	0x602	; 0x602 <__tablejump2__>
			case 0:
				DIO_setPinValue(DIO_PINC1,DIO_LOW);
 11e:	60 e0       	ldi	r22, 0x00	; 0
 120:	81 e1       	ldi	r24, 0x11	; 17
 122:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC2,DIO_LOW);
 126:	60 e0       	ldi	r22, 0x00	; 0
 128:	82 e1       	ldi	r24, 0x12	; 18
 12a:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC3,DIO_LOW);
 12e:	60 e0       	ldi	r22, 0x00	; 0
 130:	83 e1       	ldi	r24, 0x13	; 19
 132:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC4,DIO_LOW);
 136:	60 e0       	ldi	r22, 0x00	; 0
 138:	84 e1       	ldi	r24, 0x14	; 20
 13a:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC5,DIO_LOW);
 13e:	60 e0       	ldi	r22, 0x00	; 0
 140:	85 e1       	ldi	r24, 0x15	; 21
 142:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC6,DIO_LOW);
 146:	60 e0       	ldi	r22, 0x00	; 0
 148:	86 e1       	ldi	r24, 0x16	; 22
 14a:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC7,DIO_LOW);
 14e:	60 e0       	ldi	r22, 0x00	; 0
 150:	87 e1       	ldi	r24, 0x17	; 23
 152:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				break;
 156:	c4 cf       	rjmp	.-120    	; 0xe0 <test_code+0x56>
			case 1:
				DIO_setPinValue(DIO_PINC1,DIO_LOW);
 158:	60 e0       	ldi	r22, 0x00	; 0
 15a:	81 e1       	ldi	r24, 0x11	; 17
 15c:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC2,DIO_HIGH);
 160:	61 e0       	ldi	r22, 0x01	; 1
 162:	82 e1       	ldi	r24, 0x12	; 18
 164:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC3,DIO_HIGH);
 168:	61 e0       	ldi	r22, 0x01	; 1
 16a:	83 e1       	ldi	r24, 0x13	; 19
 16c:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC4,DIO_LOW);
 170:	60 e0       	ldi	r22, 0x00	; 0
 172:	84 e1       	ldi	r24, 0x14	; 20
 174:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC5,DIO_LOW);
 178:	60 e0       	ldi	r22, 0x00	; 0
 17a:	85 e1       	ldi	r24, 0x15	; 21
 17c:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC6,DIO_LOW);
 180:	60 e0       	ldi	r22, 0x00	; 0
 182:	86 e1       	ldi	r24, 0x16	; 22
 184:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC7,DIO_LOW);
 188:	60 e0       	ldi	r22, 0x00	; 0
 18a:	87 e1       	ldi	r24, 0x17	; 23
 18c:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				break;
 190:	a7 cf       	rjmp	.-178    	; 0xe0 <test_code+0x56>
			case 2:
				DIO_setPinValue(DIO_PINC1,DIO_HIGH);
 192:	61 e0       	ldi	r22, 0x01	; 1
 194:	81 e1       	ldi	r24, 0x11	; 17
 196:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC2,DIO_HIGH);
 19a:	61 e0       	ldi	r22, 0x01	; 1
 19c:	82 e1       	ldi	r24, 0x12	; 18
 19e:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC3,DIO_LOW);
 1a2:	60 e0       	ldi	r22, 0x00	; 0
 1a4:	83 e1       	ldi	r24, 0x13	; 19
 1a6:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC4,DIO_HIGH);
 1aa:	61 e0       	ldi	r22, 0x01	; 1
 1ac:	84 e1       	ldi	r24, 0x14	; 20
 1ae:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC5,DIO_HIGH);
 1b2:	61 e0       	ldi	r22, 0x01	; 1
 1b4:	85 e1       	ldi	r24, 0x15	; 21
 1b6:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC6,DIO_LOW);
 1ba:	60 e0       	ldi	r22, 0x00	; 0
 1bc:	86 e1       	ldi	r24, 0x16	; 22
 1be:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC7,DIO_HIGH);
 1c2:	61 e0       	ldi	r22, 0x01	; 1
 1c4:	87 e1       	ldi	r24, 0x17	; 23
 1c6:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				break;
 1ca:	8a cf       	rjmp	.-236    	; 0xe0 <test_code+0x56>
			case 3:
				DIO_setPinValue(DIO_PINC1,DIO_HIGH);
 1cc:	61 e0       	ldi	r22, 0x01	; 1
 1ce:	81 e1       	ldi	r24, 0x11	; 17
 1d0:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC2,DIO_HIGH);
 1d4:	61 e0       	ldi	r22, 0x01	; 1
 1d6:	82 e1       	ldi	r24, 0x12	; 18
 1d8:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC3,DIO_HIGH);
 1dc:	61 e0       	ldi	r22, 0x01	; 1
 1de:	83 e1       	ldi	r24, 0x13	; 19
 1e0:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC4,DIO_HIGH);
 1e4:	61 e0       	ldi	r22, 0x01	; 1
 1e6:	84 e1       	ldi	r24, 0x14	; 20
 1e8:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC5,DIO_LOW);
 1ec:	60 e0       	ldi	r22, 0x00	; 0
 1ee:	85 e1       	ldi	r24, 0x15	; 21
 1f0:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC6,DIO_LOW);
 1f4:	60 e0       	ldi	r22, 0x00	; 0
 1f6:	86 e1       	ldi	r24, 0x16	; 22
 1f8:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC7,DIO_HIGH);
 1fc:	61 e0       	ldi	r22, 0x01	; 1
 1fe:	87 e1       	ldi	r24, 0x17	; 23
 200:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				break;
 204:	6d cf       	rjmp	.-294    	; 0xe0 <test_code+0x56>
			case 4:
				DIO_setPinValue(DIO_PINC1,DIO_LOW);
 206:	60 e0       	ldi	r22, 0x00	; 0
 208:	81 e1       	ldi	r24, 0x11	; 17
 20a:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC2,DIO_HIGH);
 20e:	61 e0       	ldi	r22, 0x01	; 1
 210:	82 e1       	ldi	r24, 0x12	; 18
 212:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC3,DIO_HIGH);
 216:	61 e0       	ldi	r22, 0x01	; 1
 218:	83 e1       	ldi	r24, 0x13	; 19
 21a:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC4,DIO_LOW);
 21e:	60 e0       	ldi	r22, 0x00	; 0
 220:	84 e1       	ldi	r24, 0x14	; 20
 222:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC5,DIO_LOW);
 226:	60 e0       	ldi	r22, 0x00	; 0
 228:	85 e1       	ldi	r24, 0x15	; 21
 22a:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC6,DIO_HIGH);
 22e:	61 e0       	ldi	r22, 0x01	; 1
 230:	86 e1       	ldi	r24, 0x16	; 22
 232:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC7,DIO_HIGH);
 236:	61 e0       	ldi	r22, 0x01	; 1
 238:	87 e1       	ldi	r24, 0x17	; 23
 23a:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				break;
 23e:	50 cf       	rjmp	.-352    	; 0xe0 <test_code+0x56>
			case 5:
				DIO_setPinValue(DIO_PINC1,DIO_HIGH);
 240:	61 e0       	ldi	r22, 0x01	; 1
 242:	81 e1       	ldi	r24, 0x11	; 17
 244:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC2,DIO_LOW);
 248:	60 e0       	ldi	r22, 0x00	; 0
 24a:	82 e1       	ldi	r24, 0x12	; 18
 24c:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC3,DIO_HIGH);
 250:	61 e0       	ldi	r22, 0x01	; 1
 252:	83 e1       	ldi	r24, 0x13	; 19
 254:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC4,DIO_HIGH);
 258:	61 e0       	ldi	r22, 0x01	; 1
 25a:	84 e1       	ldi	r24, 0x14	; 20
 25c:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC5,DIO_LOW);
 260:	60 e0       	ldi	r22, 0x00	; 0
 262:	85 e1       	ldi	r24, 0x15	; 21
 264:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC6,DIO_HIGH);
 268:	61 e0       	ldi	r22, 0x01	; 1
 26a:	86 e1       	ldi	r24, 0x16	; 22
 26c:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC7,DIO_HIGH);
 270:	61 e0       	ldi	r22, 0x01	; 1
 272:	87 e1       	ldi	r24, 0x17	; 23
 274:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				break;
 278:	33 cf       	rjmp	.-410    	; 0xe0 <test_code+0x56>
			case 6:
				DIO_setPinValue(DIO_PINC1,DIO_HIGH);
 27a:	61 e0       	ldi	r22, 0x01	; 1
 27c:	81 e1       	ldi	r24, 0x11	; 17
 27e:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC2,DIO_LOW);
 282:	60 e0       	ldi	r22, 0x00	; 0
 284:	82 e1       	ldi	r24, 0x12	; 18
 286:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC3,DIO_HIGH);
 28a:	61 e0       	ldi	r22, 0x01	; 1
 28c:	83 e1       	ldi	r24, 0x13	; 19
 28e:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC4,DIO_HIGH);
 292:	61 e0       	ldi	r22, 0x01	; 1
 294:	84 e1       	ldi	r24, 0x14	; 20
 296:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC5,DIO_HIGH);
 29a:	61 e0       	ldi	r22, 0x01	; 1
 29c:	85 e1       	ldi	r24, 0x15	; 21
 29e:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC6,DIO_HIGH);
 2a2:	61 e0       	ldi	r22, 0x01	; 1
 2a4:	86 e1       	ldi	r24, 0x16	; 22
 2a6:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC7,DIO_HIGH);
 2aa:	61 e0       	ldi	r22, 0x01	; 1
 2ac:	87 e1       	ldi	r24, 0x17	; 23
 2ae:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				break;
 2b2:	16 cf       	rjmp	.-468    	; 0xe0 <test_code+0x56>
			case 7:
				DIO_setPinValue(DIO_PINC1,DIO_HIGH);
 2b4:	61 e0       	ldi	r22, 0x01	; 1
 2b6:	81 e1       	ldi	r24, 0x11	; 17
 2b8:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC2,DIO_HIGH);
 2bc:	61 e0       	ldi	r22, 0x01	; 1
 2be:	82 e1       	ldi	r24, 0x12	; 18
 2c0:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC3,DIO_HIGH);
 2c4:	61 e0       	ldi	r22, 0x01	; 1
 2c6:	83 e1       	ldi	r24, 0x13	; 19
 2c8:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC4,DIO_LOW);
 2cc:	60 e0       	ldi	r22, 0x00	; 0
 2ce:	84 e1       	ldi	r24, 0x14	; 20
 2d0:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC5,DIO_LOW);
 2d4:	60 e0       	ldi	r22, 0x00	; 0
 2d6:	85 e1       	ldi	r24, 0x15	; 21
 2d8:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC6,DIO_LOW);
 2dc:	60 e0       	ldi	r22, 0x00	; 0
 2de:	86 e1       	ldi	r24, 0x16	; 22
 2e0:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC7,DIO_LOW);
 2e4:	60 e0       	ldi	r22, 0x00	; 0
 2e6:	87 e1       	ldi	r24, 0x17	; 23
 2e8:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				break;
 2ec:	f9 ce       	rjmp	.-526    	; 0xe0 <test_code+0x56>
			case 8:
				DIO_setPinValue(DIO_PINC1,DIO_HIGH);
 2ee:	61 e0       	ldi	r22, 0x01	; 1
 2f0:	81 e1       	ldi	r24, 0x11	; 17
 2f2:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC2,DIO_HIGH);
 2f6:	61 e0       	ldi	r22, 0x01	; 1
 2f8:	82 e1       	ldi	r24, 0x12	; 18
 2fa:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC3,DIO_HIGH);
 2fe:	61 e0       	ldi	r22, 0x01	; 1
 300:	83 e1       	ldi	r24, 0x13	; 19
 302:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC4,DIO_HIGH);
 306:	61 e0       	ldi	r22, 0x01	; 1
 308:	84 e1       	ldi	r24, 0x14	; 20
 30a:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC5,DIO_HIGH);
 30e:	61 e0       	ldi	r22, 0x01	; 1
 310:	85 e1       	ldi	r24, 0x15	; 21
 312:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC6,DIO_HIGH);
 316:	61 e0       	ldi	r22, 0x01	; 1
 318:	86 e1       	ldi	r24, 0x16	; 22
 31a:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC7,DIO_HIGH);
 31e:	61 e0       	ldi	r22, 0x01	; 1
 320:	87 e1       	ldi	r24, 0x17	; 23
 322:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				break;
 326:	dc ce       	rjmp	.-584    	; 0xe0 <test_code+0x56>
			case 9:
				DIO_setPinValue(DIO_PINC1,DIO_HIGH);
 328:	61 e0       	ldi	r22, 0x01	; 1
 32a:	81 e1       	ldi	r24, 0x11	; 17
 32c:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC2,DIO_HIGH);
 330:	61 e0       	ldi	r22, 0x01	; 1
 332:	82 e1       	ldi	r24, 0x12	; 18
 334:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC3,DIO_HIGH);
 338:	61 e0       	ldi	r22, 0x01	; 1
 33a:	83 e1       	ldi	r24, 0x13	; 19
 33c:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC4,DIO_HIGH);
 340:	61 e0       	ldi	r22, 0x01	; 1
 342:	84 e1       	ldi	r24, 0x14	; 20
 344:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC5,DIO_LOW);
 348:	60 e0       	ldi	r22, 0x00	; 0
 34a:	85 e1       	ldi	r24, 0x15	; 21
 34c:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC6,DIO_HIGH);
 350:	61 e0       	ldi	r22, 0x01	; 1
 352:	86 e1       	ldi	r24, 0x16	; 22
 354:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC7,DIO_HIGH);
 358:	61 e0       	ldi	r22, 0x01	; 1
 35a:	87 e1       	ldi	r24, 0x17	; 23
 35c:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
				break;
 360:	bf ce       	rjmp	.-642    	; 0xe0 <test_code+0x56>

00000362 <DIO_setPinDir>:

#include "DIO_INT.h"

void DIO_setPinDir(u8 pinNum, u8 dir){
	//PORTA
	if (pinNum>=0 && pinNum<=7) 
 362:	88 30       	cpi	r24, 0x08	; 8
 364:	00 f5       	brcc	.+64     	; 0x3a6 <DIO_setPinDir+0x44>
	{
		if (dir==DIO_INPUT){
 366:	61 11       	cpse	r22, r1
 368:	0e c0       	rjmp	.+28     	; 0x386 <DIO_setPinDir+0x24>
			CLEAR_BIT(DDRA,pinNum);
 36a:	4a b3       	in	r20, 0x1a	; 26
 36c:	21 e0       	ldi	r18, 0x01	; 1
 36e:	30 e0       	ldi	r19, 0x00	; 0
 370:	b9 01       	movw	r22, r18
 372:	02 c0       	rjmp	.+4      	; 0x378 <DIO_setPinDir+0x16>
 374:	66 0f       	add	r22, r22
 376:	77 1f       	adc	r23, r23
 378:	8a 95       	dec	r24
 37a:	e2 f7       	brpl	.-8      	; 0x374 <DIO_setPinDir+0x12>
 37c:	cb 01       	movw	r24, r22
 37e:	80 95       	com	r24
 380:	84 23       	and	r24, r20
 382:	8a bb       	out	0x1a, r24	; 26
 384:	08 95       	ret
		}
		else if(dir==DIO_OUTPUT){
 386:	61 30       	cpi	r22, 0x01	; 1
 388:	09 f0       	breq	.+2      	; 0x38c <DIO_setPinDir+0x2a>
 38a:	75 c0       	rjmp	.+234    	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
			SET_BIT(DDRA,pinNum);
 38c:	4a b3       	in	r20, 0x1a	; 26
 38e:	21 e0       	ldi	r18, 0x01	; 1
 390:	30 e0       	ldi	r19, 0x00	; 0
 392:	b9 01       	movw	r22, r18
 394:	02 c0       	rjmp	.+4      	; 0x39a <DIO_setPinDir+0x38>
 396:	66 0f       	add	r22, r22
 398:	77 1f       	adc	r23, r23
 39a:	8a 95       	dec	r24
 39c:	e2 f7       	brpl	.-8      	; 0x396 <DIO_setPinDir+0x34>
 39e:	cb 01       	movw	r24, r22
 3a0:	84 2b       	or	r24, r20
 3a2:	8a bb       	out	0x1a, r24	; 26
 3a4:	08 95       	ret
		}
	}
	else //PORTB
	if (pinNum>=8 && pinNum<=15) 
 3a6:	98 ef       	ldi	r25, 0xF8	; 248
 3a8:	98 0f       	add	r25, r24
 3aa:	98 30       	cpi	r25, 0x08	; 8
 3ac:	00 f5       	brcc	.+64     	; 0x3ee <DIO_setPinDir+0x8c>
	{
		pinNum=pinNum-8;
		if (dir==DIO_INPUT){
 3ae:	61 11       	cpse	r22, r1
 3b0:	0e c0       	rjmp	.+28     	; 0x3ce <DIO_setPinDir+0x6c>
			CLEAR_BIT(DDRB,pinNum);
 3b2:	47 b3       	in	r20, 0x17	; 23
 3b4:	21 e0       	ldi	r18, 0x01	; 1
 3b6:	30 e0       	ldi	r19, 0x00	; 0
 3b8:	b9 01       	movw	r22, r18
 3ba:	02 c0       	rjmp	.+4      	; 0x3c0 <DIO_setPinDir+0x5e>
 3bc:	66 0f       	add	r22, r22
 3be:	77 1f       	adc	r23, r23
 3c0:	9a 95       	dec	r25
 3c2:	e2 f7       	brpl	.-8      	; 0x3bc <DIO_setPinDir+0x5a>
 3c4:	cb 01       	movw	r24, r22
 3c6:	80 95       	com	r24
 3c8:	84 23       	and	r24, r20
 3ca:	87 bb       	out	0x17, r24	; 23
 3cc:	08 95       	ret
		}
		else if(dir==DIO_OUTPUT){
 3ce:	61 30       	cpi	r22, 0x01	; 1
 3d0:	09 f0       	breq	.+2      	; 0x3d4 <DIO_setPinDir+0x72>
 3d2:	51 c0       	rjmp	.+162    	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
			SET_BIT(DDRB,pinNum);
 3d4:	47 b3       	in	r20, 0x17	; 23
 3d6:	21 e0       	ldi	r18, 0x01	; 1
 3d8:	30 e0       	ldi	r19, 0x00	; 0
 3da:	b9 01       	movw	r22, r18
 3dc:	02 c0       	rjmp	.+4      	; 0x3e2 <DIO_setPinDir+0x80>
 3de:	66 0f       	add	r22, r22
 3e0:	77 1f       	adc	r23, r23
 3e2:	9a 95       	dec	r25
 3e4:	e2 f7       	brpl	.-8      	; 0x3de <DIO_setPinDir+0x7c>
 3e6:	cb 01       	movw	r24, r22
 3e8:	84 2b       	or	r24, r20
 3ea:	87 bb       	out	0x17, r24	; 23
 3ec:	08 95       	ret
		}
	}
	else //PORTC
	if (pinNum>=16 && pinNum<=23) 
 3ee:	90 ef       	ldi	r25, 0xF0	; 240
 3f0:	98 0f       	add	r25, r24
 3f2:	98 30       	cpi	r25, 0x08	; 8
 3f4:	f8 f4       	brcc	.+62     	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
	{
		pinNum=pinNum-16;
		if (dir==DIO_INPUT){
 3f6:	61 11       	cpse	r22, r1
 3f8:	0e c0       	rjmp	.+28     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
			CLEAR_BIT(DDRC,pinNum);
 3fa:	44 b3       	in	r20, 0x14	; 20
 3fc:	21 e0       	ldi	r18, 0x01	; 1
 3fe:	30 e0       	ldi	r19, 0x00	; 0
 400:	b9 01       	movw	r22, r18
 402:	02 c0       	rjmp	.+4      	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 404:	66 0f       	add	r22, r22
 406:	77 1f       	adc	r23, r23
 408:	9a 95       	dec	r25
 40a:	e2 f7       	brpl	.-8      	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
 40c:	cb 01       	movw	r24, r22
 40e:	80 95       	com	r24
 410:	84 23       	and	r24, r20
 412:	84 bb       	out	0x14, r24	; 20
 414:	08 95       	ret
		}
		else if(dir==DIO_OUTPUT){
 416:	61 30       	cpi	r22, 0x01	; 1
 418:	71 f5       	brne	.+92     	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
			SET_BIT(DDRC,pinNum);
 41a:	44 b3       	in	r20, 0x14	; 20
 41c:	21 e0       	ldi	r18, 0x01	; 1
 41e:	30 e0       	ldi	r19, 0x00	; 0
 420:	b9 01       	movw	r22, r18
 422:	02 c0       	rjmp	.+4      	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 424:	66 0f       	add	r22, r22
 426:	77 1f       	adc	r23, r23
 428:	9a 95       	dec	r25
 42a:	e2 f7       	brpl	.-8      	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
 42c:	cb 01       	movw	r24, r22
 42e:	84 2b       	or	r24, r20
 430:	84 bb       	out	0x14, r24	; 20
 432:	08 95       	ret
		}
	}
	else //PORTD
	if (pinNum>=24 && pinNum<=31) 
 434:	88 51       	subi	r24, 0x18	; 24
 436:	88 30       	cpi	r24, 0x08	; 8
 438:	f0 f4       	brcc	.+60     	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
	{
		pinNum=pinNum-24;
		if (dir==DIO_INPUT){
 43a:	61 11       	cpse	r22, r1
 43c:	0e c0       	rjmp	.+28     	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
			CLEAR_BIT(DDRC,pinNum);
 43e:	44 b3       	in	r20, 0x14	; 20
 440:	21 e0       	ldi	r18, 0x01	; 1
 442:	30 e0       	ldi	r19, 0x00	; 0
 444:	b9 01       	movw	r22, r18
 446:	02 c0       	rjmp	.+4      	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 448:	66 0f       	add	r22, r22
 44a:	77 1f       	adc	r23, r23
 44c:	8a 95       	dec	r24
 44e:	e2 f7       	brpl	.-8      	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
 450:	cb 01       	movw	r24, r22
 452:	80 95       	com	r24
 454:	84 23       	and	r24, r20
 456:	84 bb       	out	0x14, r24	; 20
 458:	08 95       	ret
		}
		else if(dir==DIO_OUTPUT){
 45a:	61 30       	cpi	r22, 0x01	; 1
 45c:	61 f4       	brne	.+24     	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
			SET_BIT(DDRC,pinNum);
 45e:	44 b3       	in	r20, 0x14	; 20
 460:	21 e0       	ldi	r18, 0x01	; 1
 462:	30 e0       	ldi	r19, 0x00	; 0
 464:	b9 01       	movw	r22, r18
 466:	02 c0       	rjmp	.+4      	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
 468:	66 0f       	add	r22, r22
 46a:	77 1f       	adc	r23, r23
 46c:	8a 95       	dec	r24
 46e:	e2 f7       	brpl	.-8      	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
 470:	cb 01       	movw	r24, r22
 472:	84 2b       	or	r24, r20
 474:	84 bb       	out	0x14, r24	; 20
 476:	08 95       	ret

00000478 <DIO_setPinValue>:
	}
}

void DIO_setPinValue(u8 pinNum, u8 level){
	//PORTA
	if (pinNum>=0 && pinNum<=7) 
 478:	88 30       	cpi	r24, 0x08	; 8
 47a:	00 f5       	brcc	.+64     	; 0x4bc <DIO_setPinValue+0x44>
	{
		if (level==DIO_LOW){
 47c:	61 11       	cpse	r22, r1
 47e:	0e c0       	rjmp	.+28     	; 0x49c <DIO_setPinValue+0x24>
			CLEAR_BIT(PORTA,pinNum);
 480:	4b b3       	in	r20, 0x1b	; 27
 482:	21 e0       	ldi	r18, 0x01	; 1
 484:	30 e0       	ldi	r19, 0x00	; 0
 486:	b9 01       	movw	r22, r18
 488:	02 c0       	rjmp	.+4      	; 0x48e <DIO_setPinValue+0x16>
 48a:	66 0f       	add	r22, r22
 48c:	77 1f       	adc	r23, r23
 48e:	8a 95       	dec	r24
 490:	e2 f7       	brpl	.-8      	; 0x48a <DIO_setPinValue+0x12>
 492:	cb 01       	movw	r24, r22
 494:	80 95       	com	r24
 496:	84 23       	and	r24, r20
 498:	8b bb       	out	0x1b, r24	; 27
 49a:	08 95       	ret
		}
		else if(level==DIO_HIGH){
 49c:	61 30       	cpi	r22, 0x01	; 1
 49e:	09 f0       	breq	.+2      	; 0x4a2 <DIO_setPinValue+0x2a>
 4a0:	75 c0       	rjmp	.+234    	; 0x58c <DIO_setPinValue+0x114>
			SET_BIT(PORTA,pinNum);
 4a2:	4b b3       	in	r20, 0x1b	; 27
 4a4:	21 e0       	ldi	r18, 0x01	; 1
 4a6:	30 e0       	ldi	r19, 0x00	; 0
 4a8:	b9 01       	movw	r22, r18
 4aa:	02 c0       	rjmp	.+4      	; 0x4b0 <DIO_setPinValue+0x38>
 4ac:	66 0f       	add	r22, r22
 4ae:	77 1f       	adc	r23, r23
 4b0:	8a 95       	dec	r24
 4b2:	e2 f7       	brpl	.-8      	; 0x4ac <DIO_setPinValue+0x34>
 4b4:	cb 01       	movw	r24, r22
 4b6:	84 2b       	or	r24, r20
 4b8:	8b bb       	out	0x1b, r24	; 27
 4ba:	08 95       	ret
		}
	}
	else //PORTB
	if (pinNum>=8 && pinNum<=15) 
 4bc:	98 ef       	ldi	r25, 0xF8	; 248
 4be:	98 0f       	add	r25, r24
 4c0:	98 30       	cpi	r25, 0x08	; 8
 4c2:	00 f5       	brcc	.+64     	; 0x504 <DIO_setPinValue+0x8c>
	{
		pinNum=pinNum-8;
		if (level==DIO_LOW){
 4c4:	61 11       	cpse	r22, r1
 4c6:	0e c0       	rjmp	.+28     	; 0x4e4 <DIO_setPinValue+0x6c>
			CLEAR_BIT(PORTB,pinNum);
 4c8:	48 b3       	in	r20, 0x18	; 24
 4ca:	21 e0       	ldi	r18, 0x01	; 1
 4cc:	30 e0       	ldi	r19, 0x00	; 0
 4ce:	b9 01       	movw	r22, r18
 4d0:	02 c0       	rjmp	.+4      	; 0x4d6 <DIO_setPinValue+0x5e>
 4d2:	66 0f       	add	r22, r22
 4d4:	77 1f       	adc	r23, r23
 4d6:	9a 95       	dec	r25
 4d8:	e2 f7       	brpl	.-8      	; 0x4d2 <DIO_setPinValue+0x5a>
 4da:	cb 01       	movw	r24, r22
 4dc:	80 95       	com	r24
 4de:	84 23       	and	r24, r20
 4e0:	88 bb       	out	0x18, r24	; 24
 4e2:	08 95       	ret
		}
		else if(level==DIO_HIGH){
 4e4:	61 30       	cpi	r22, 0x01	; 1
 4e6:	09 f0       	breq	.+2      	; 0x4ea <DIO_setPinValue+0x72>
 4e8:	51 c0       	rjmp	.+162    	; 0x58c <DIO_setPinValue+0x114>
			SET_BIT(PORTB,pinNum);
 4ea:	48 b3       	in	r20, 0x18	; 24
 4ec:	21 e0       	ldi	r18, 0x01	; 1
 4ee:	30 e0       	ldi	r19, 0x00	; 0
 4f0:	b9 01       	movw	r22, r18
 4f2:	02 c0       	rjmp	.+4      	; 0x4f8 <DIO_setPinValue+0x80>
 4f4:	66 0f       	add	r22, r22
 4f6:	77 1f       	adc	r23, r23
 4f8:	9a 95       	dec	r25
 4fa:	e2 f7       	brpl	.-8      	; 0x4f4 <DIO_setPinValue+0x7c>
 4fc:	cb 01       	movw	r24, r22
 4fe:	84 2b       	or	r24, r20
 500:	88 bb       	out	0x18, r24	; 24
 502:	08 95       	ret
		}
	}
	else //PORTC
	if (pinNum>=16 && pinNum<=23) 
 504:	90 ef       	ldi	r25, 0xF0	; 240
 506:	98 0f       	add	r25, r24
 508:	98 30       	cpi	r25, 0x08	; 8
 50a:	f8 f4       	brcc	.+62     	; 0x54a <DIO_setPinValue+0xd2>
	{
		pinNum=pinNum-16;
		if (level==DIO_LOW){
 50c:	61 11       	cpse	r22, r1
 50e:	0e c0       	rjmp	.+28     	; 0x52c <DIO_setPinValue+0xb4>
			CLEAR_BIT(PORTC,pinNum);
 510:	45 b3       	in	r20, 0x15	; 21
 512:	21 e0       	ldi	r18, 0x01	; 1
 514:	30 e0       	ldi	r19, 0x00	; 0
 516:	b9 01       	movw	r22, r18
 518:	02 c0       	rjmp	.+4      	; 0x51e <DIO_setPinValue+0xa6>
 51a:	66 0f       	add	r22, r22
 51c:	77 1f       	adc	r23, r23
 51e:	9a 95       	dec	r25
 520:	e2 f7       	brpl	.-8      	; 0x51a <DIO_setPinValue+0xa2>
 522:	cb 01       	movw	r24, r22
 524:	80 95       	com	r24
 526:	84 23       	and	r24, r20
 528:	85 bb       	out	0x15, r24	; 21
 52a:	08 95       	ret
		}
		else if(level==DIO_HIGH){
 52c:	61 30       	cpi	r22, 0x01	; 1
 52e:	71 f5       	brne	.+92     	; 0x58c <DIO_setPinValue+0x114>
			SET_BIT(PORTC,pinNum);
 530:	45 b3       	in	r20, 0x15	; 21
 532:	21 e0       	ldi	r18, 0x01	; 1
 534:	30 e0       	ldi	r19, 0x00	; 0
 536:	b9 01       	movw	r22, r18
 538:	02 c0       	rjmp	.+4      	; 0x53e <DIO_setPinValue+0xc6>
 53a:	66 0f       	add	r22, r22
 53c:	77 1f       	adc	r23, r23
 53e:	9a 95       	dec	r25
 540:	e2 f7       	brpl	.-8      	; 0x53a <DIO_setPinValue+0xc2>
 542:	cb 01       	movw	r24, r22
 544:	84 2b       	or	r24, r20
 546:	85 bb       	out	0x15, r24	; 21
 548:	08 95       	ret
		}
	}
	else //PORTD
	if (pinNum>=24 && pinNum<=31) 
 54a:	88 51       	subi	r24, 0x18	; 24
 54c:	88 30       	cpi	r24, 0x08	; 8
 54e:	f0 f4       	brcc	.+60     	; 0x58c <DIO_setPinValue+0x114>
	{
		pinNum=pinNum-24;
		if (level==DIO_LOW){
 550:	61 11       	cpse	r22, r1
 552:	0e c0       	rjmp	.+28     	; 0x570 <DIO_setPinValue+0xf8>
			CLEAR_BIT(PORTD,pinNum);
 554:	42 b3       	in	r20, 0x12	; 18
 556:	21 e0       	ldi	r18, 0x01	; 1
 558:	30 e0       	ldi	r19, 0x00	; 0
 55a:	b9 01       	movw	r22, r18
 55c:	02 c0       	rjmp	.+4      	; 0x562 <DIO_setPinValue+0xea>
 55e:	66 0f       	add	r22, r22
 560:	77 1f       	adc	r23, r23
 562:	8a 95       	dec	r24
 564:	e2 f7       	brpl	.-8      	; 0x55e <DIO_setPinValue+0xe6>
 566:	cb 01       	movw	r24, r22
 568:	80 95       	com	r24
 56a:	84 23       	and	r24, r20
 56c:	82 bb       	out	0x12, r24	; 18
 56e:	08 95       	ret
		}
		else if(level==DIO_HIGH){
 570:	61 30       	cpi	r22, 0x01	; 1
 572:	61 f4       	brne	.+24     	; 0x58c <DIO_setPinValue+0x114>
			SET_BIT(PORTD,pinNum);
 574:	42 b3       	in	r20, 0x12	; 18
 576:	21 e0       	ldi	r18, 0x01	; 1
 578:	30 e0       	ldi	r19, 0x00	; 0
 57a:	b9 01       	movw	r22, r18
 57c:	02 c0       	rjmp	.+4      	; 0x582 <DIO_setPinValue+0x10a>
 57e:	66 0f       	add	r22, r22
 580:	77 1f       	adc	r23, r23
 582:	8a 95       	dec	r24
 584:	e2 f7       	brpl	.-8      	; 0x57e <DIO_setPinValue+0x106>
 586:	cb 01       	movw	r24, r22
 588:	84 2b       	or	r24, r20
 58a:	82 bb       	out	0x12, r24	; 18
 58c:	08 95       	ret

0000058e <DIO_readPinValue>:
	}
}

u8 DIO_readPinValue(u8 pinNum){
	//PORTA
	if (pinNum>=0 && pinNum<=7)
 58e:	88 30       	cpi	r24, 0x08	; 8
 590:	58 f4       	brcc	.+22     	; 0x5a8 <DIO_readPinValue+0x1a>
	{
		return GET_BIT(PINA,pinNum);
 592:	29 b3       	in	r18, 0x19	; 25
 594:	30 e0       	ldi	r19, 0x00	; 0
 596:	a9 01       	movw	r20, r18
 598:	02 c0       	rjmp	.+4      	; 0x59e <DIO_readPinValue+0x10>
 59a:	55 95       	asr	r21
 59c:	47 95       	ror	r20
 59e:	8a 95       	dec	r24
 5a0:	e2 f7       	brpl	.-8      	; 0x59a <DIO_readPinValue+0xc>
 5a2:	ca 01       	movw	r24, r20
 5a4:	81 70       	andi	r24, 0x01	; 1
 5a6:	08 95       	ret
	}
	else //PORTB
	if (pinNum>=8 && pinNum<=15)
 5a8:	28 ef       	ldi	r18, 0xF8	; 248
 5aa:	28 0f       	add	r18, r24
 5ac:	28 30       	cpi	r18, 0x08	; 8
 5ae:	48 f4       	brcc	.+18     	; 0x5c2 <DIO_readPinValue+0x34>
	{
		pinNum=pinNum-8;
		return GET_BIT(PINB,pinNum);
 5b0:	86 b3       	in	r24, 0x16	; 22
 5b2:	90 e0       	ldi	r25, 0x00	; 0
 5b4:	02 c0       	rjmp	.+4      	; 0x5ba <DIO_readPinValue+0x2c>
 5b6:	95 95       	asr	r25
 5b8:	87 95       	ror	r24
 5ba:	2a 95       	dec	r18
 5bc:	e2 f7       	brpl	.-8      	; 0x5b6 <DIO_readPinValue+0x28>
 5be:	81 70       	andi	r24, 0x01	; 1
 5c0:	08 95       	ret
	}
	else //PORTC
	if (pinNum>=16 && pinNum<=23)
 5c2:	20 ef       	ldi	r18, 0xF0	; 240
 5c4:	28 0f       	add	r18, r24
 5c6:	28 30       	cpi	r18, 0x08	; 8
 5c8:	48 f4       	brcc	.+18     	; 0x5dc <DIO_readPinValue+0x4e>
	{
		pinNum=pinNum-16;
		return GET_BIT(PINC,pinNum);
 5ca:	83 b3       	in	r24, 0x13	; 19
 5cc:	90 e0       	ldi	r25, 0x00	; 0
 5ce:	02 c0       	rjmp	.+4      	; 0x5d4 <DIO_readPinValue+0x46>
 5d0:	95 95       	asr	r25
 5d2:	87 95       	ror	r24
 5d4:	2a 95       	dec	r18
 5d6:	e2 f7       	brpl	.-8      	; 0x5d0 <DIO_readPinValue+0x42>
 5d8:	81 70       	andi	r24, 0x01	; 1
 5da:	08 95       	ret
	}
	else //PORTD
	if (pinNum>=24 && pinNum<=31)
 5dc:	28 ee       	ldi	r18, 0xE8	; 232
 5de:	28 0f       	add	r18, r24
 5e0:	28 30       	cpi	r18, 0x08	; 8
 5e2:	50 f4       	brcc	.+20     	; 0x5f8 <DIO_readPinValue+0x6a>
	{
		pinNum=pinNum-24;
		return GET_BIT(PIND,pinNum);
 5e4:	90 b3       	in	r25, 0x10	; 16
 5e6:	89 2f       	mov	r24, r25
 5e8:	90 e0       	ldi	r25, 0x00	; 0
 5ea:	02 c0       	rjmp	.+4      	; 0x5f0 <DIO_readPinValue+0x62>
 5ec:	95 95       	asr	r25
 5ee:	87 95       	ror	r24
 5f0:	2a 95       	dec	r18
 5f2:	e2 f7       	brpl	.-8      	; 0x5ec <DIO_readPinValue+0x5e>
 5f4:	81 70       	andi	r24, 0x01	; 1
 5f6:	08 95       	ret
	}
}
 5f8:	08 95       	ret

000005fa <DIO_setPullUp>:

void DIO_setPullUp(u8 pinNum){
	DIO_setPinValue(pinNum,DIO_HIGH);
 5fa:	61 e0       	ldi	r22, 0x01	; 1
 5fc:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_setPinValue>
 600:	08 95       	ret

00000602 <__tablejump2__>:
 602:	ee 0f       	add	r30, r30
 604:	ff 1f       	adc	r31, r31
 606:	05 90       	lpm	r0, Z+
 608:	f4 91       	lpm	r31, Z
 60a:	e0 2d       	mov	r30, r0
 60c:	09 94       	ijmp

0000060e <_exit>:
 60e:	f8 94       	cli

00000610 <__stop_program>:
 610:	ff cf       	rjmp	.-2      	; 0x610 <__stop_program>
