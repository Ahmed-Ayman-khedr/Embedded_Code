
code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000004a8  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000004fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000004fc  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000052c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000e0  00000000  00000000  00000568  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000010c9  00000000  00000000  00000648  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000088b  00000000  00000000  00001711  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000868  00000000  00000000  00001f9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001a4  00000000  00000000  00002804  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000485  00000000  00000000  000029a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000091e  00000000  00000000  00002e2d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000a0  00000000  00000000  0000374b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 52 02 	jmp	0x4a4	; 0x4a4 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include "BIT_MATH.h"

#include "Sess19\ses.h"

int main(){
	source_code();
  6c:	0e 94 3b 00 	call	0x76	; 0x76 <source_code>
	return 0;
  70:	80 e0       	ldi	r24, 0x00	; 0
  72:	90 e0       	ldi	r25, 0x00	; 0
  74:	08 95       	ret

00000076 <source_code>:
	//Increment button
	//DIO_setPinDir(DIO_PIND2,DIO_INPUT);
	//u8 increment_button;
	
	//u8 counter = 0;
	LCD_int();
  76:	0e 94 e5 00 	call	0x1ca	; 0x1ca <LCD_int>
	u8 place=0;
  7a:	c0 e0       	ldi	r28, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <source_code+0xa>
		place++;
		_delay_ms(500);
		LCD_clearDis();
		if (place==16)
		{
			place=0;
  7e:	c0 e0       	ldi	r28, 0x00	; 0
	//LCD_sendNum(12);
	//LCD_sendFloatNum(123.123);
	while (1)
	{
		
		LCD_GoTo(place,1);
  80:	61 e0       	ldi	r22, 0x01	; 1
  82:	8c 2f       	mov	r24, r28
  84:	0e 94 30 01 	call	0x260	; 0x260 <LCD_GoTo>
		LCD_sendData('A');
  88:	81 e4       	ldi	r24, 0x41	; 65
  8a:	0e 94 65 00 	call	0xca	; 0xca <LCD_sendData>
		place++;
  8e:	cf 5f       	subi	r28, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  90:	2f ef       	ldi	r18, 0xFF	; 255
  92:	89 e6       	ldi	r24, 0x69	; 105
  94:	98 e1       	ldi	r25, 0x18	; 24
  96:	21 50       	subi	r18, 0x01	; 1
  98:	80 40       	sbci	r24, 0x00	; 0
  9a:	90 40       	sbci	r25, 0x00	; 0
  9c:	e1 f7       	brne	.-8      	; 0x96 <source_code+0x20>
  9e:	00 c0       	rjmp	.+0      	; 0xa0 <source_code+0x2a>
  a0:	00 00       	nop
		_delay_ms(500);
		LCD_clearDis();
  a2:	0e 94 2c 01 	call	0x258	; 0x258 <LCD_clearDis>
		if (place==16)
  a6:	c0 31       	cpi	r28, 0x10	; 16
  a8:	59 f7       	brne	.-42     	; 0x80 <source_code+0xa>
  aa:	e9 cf       	rjmp	.-46     	; 0x7e <source_code+0x8>

000000ac <LCD_pulse>:
	
	num = num - (u32) num;
	num = num * 1000;
	
	LCD_sendNum((u32)num);
}
  ac:	61 e0       	ldi	r22, 0x01	; 1
  ae:	8b e0       	ldi	r24, 0x0B	; 11
  b0:	0e 94 c7 01 	call	0x38e	; 0x38e <DIO_setPinValue>
  b4:	8f e9       	ldi	r24, 0x9F	; 159
  b6:	9f e0       	ldi	r25, 0x0F	; 15
  b8:	01 97       	sbiw	r24, 0x01	; 1
  ba:	f1 f7       	brne	.-4      	; 0xb8 <LCD_pulse+0xc>
  bc:	00 c0       	rjmp	.+0      	; 0xbe <LCD_pulse+0x12>
  be:	00 00       	nop
  c0:	60 e0       	ldi	r22, 0x00	; 0
  c2:	8b e0       	ldi	r24, 0x0B	; 11
  c4:	0e 94 c7 01 	call	0x38e	; 0x38e <DIO_setPinValue>
  c8:	08 95       	ret

000000ca <LCD_sendData>:
  ca:	cf 93       	push	r28
  cc:	c8 2f       	mov	r28, r24
  ce:	60 e0       	ldi	r22, 0x00	; 0
  d0:	8a e0       	ldi	r24, 0x0A	; 10
  d2:	0e 94 c7 01 	call	0x38e	; 0x38e <DIO_setPinValue>
  d6:	61 e0       	ldi	r22, 0x01	; 1
  d8:	89 e0       	ldi	r24, 0x09	; 9
  da:	0e 94 c7 01 	call	0x38e	; 0x38e <DIO_setPinValue>
  de:	c4 fb       	bst	r28, 4
  e0:	66 27       	eor	r22, r22
  e2:	60 f9       	bld	r22, 0
  e4:	84 e0       	ldi	r24, 0x04	; 4
  e6:	0e 94 c7 01 	call	0x38e	; 0x38e <DIO_setPinValue>
  ea:	c5 fb       	bst	r28, 5
  ec:	66 27       	eor	r22, r22
  ee:	60 f9       	bld	r22, 0
  f0:	85 e0       	ldi	r24, 0x05	; 5
  f2:	0e 94 c7 01 	call	0x38e	; 0x38e <DIO_setPinValue>
  f6:	c6 fb       	bst	r28, 6
  f8:	66 27       	eor	r22, r22
  fa:	60 f9       	bld	r22, 0
  fc:	86 e0       	ldi	r24, 0x06	; 6
  fe:	0e 94 c7 01 	call	0x38e	; 0x38e <DIO_setPinValue>
 102:	6c 2f       	mov	r22, r28
 104:	66 1f       	adc	r22, r22
 106:	66 27       	eor	r22, r22
 108:	66 1f       	adc	r22, r22
 10a:	87 e0       	ldi	r24, 0x07	; 7
 10c:	0e 94 c7 01 	call	0x38e	; 0x38e <DIO_setPinValue>
 110:	0e 94 56 00 	call	0xac	; 0xac <LCD_pulse>
 114:	6c 2f       	mov	r22, r28
 116:	61 70       	andi	r22, 0x01	; 1
 118:	84 e0       	ldi	r24, 0x04	; 4
 11a:	0e 94 c7 01 	call	0x38e	; 0x38e <DIO_setPinValue>
 11e:	c1 fb       	bst	r28, 1
 120:	66 27       	eor	r22, r22
 122:	60 f9       	bld	r22, 0
 124:	85 e0       	ldi	r24, 0x05	; 5
 126:	0e 94 c7 01 	call	0x38e	; 0x38e <DIO_setPinValue>
 12a:	c2 fb       	bst	r28, 2
 12c:	66 27       	eor	r22, r22
 12e:	60 f9       	bld	r22, 0
 130:	86 e0       	ldi	r24, 0x06	; 6
 132:	0e 94 c7 01 	call	0x38e	; 0x38e <DIO_setPinValue>
 136:	c3 fb       	bst	r28, 3
 138:	66 27       	eor	r22, r22
 13a:	60 f9       	bld	r22, 0
 13c:	87 e0       	ldi	r24, 0x07	; 7
 13e:	0e 94 c7 01 	call	0x38e	; 0x38e <DIO_setPinValue>
 142:	0e 94 56 00 	call	0xac	; 0xac <LCD_pulse>
 146:	cf 91       	pop	r28
 148:	08 95       	ret

0000014a <LCD_sendCmd>:
 14a:	cf 93       	push	r28
 14c:	c8 2f       	mov	r28, r24
 14e:	60 e0       	ldi	r22, 0x00	; 0
 150:	8a e0       	ldi	r24, 0x0A	; 10
 152:	0e 94 c7 01 	call	0x38e	; 0x38e <DIO_setPinValue>
 156:	60 e0       	ldi	r22, 0x00	; 0
 158:	89 e0       	ldi	r24, 0x09	; 9
 15a:	0e 94 c7 01 	call	0x38e	; 0x38e <DIO_setPinValue>
 15e:	c4 fb       	bst	r28, 4
 160:	66 27       	eor	r22, r22
 162:	60 f9       	bld	r22, 0
 164:	84 e0       	ldi	r24, 0x04	; 4
 166:	0e 94 c7 01 	call	0x38e	; 0x38e <DIO_setPinValue>
 16a:	c5 fb       	bst	r28, 5
 16c:	66 27       	eor	r22, r22
 16e:	60 f9       	bld	r22, 0
 170:	85 e0       	ldi	r24, 0x05	; 5
 172:	0e 94 c7 01 	call	0x38e	; 0x38e <DIO_setPinValue>
 176:	c6 fb       	bst	r28, 6
 178:	66 27       	eor	r22, r22
 17a:	60 f9       	bld	r22, 0
 17c:	86 e0       	ldi	r24, 0x06	; 6
 17e:	0e 94 c7 01 	call	0x38e	; 0x38e <DIO_setPinValue>
 182:	6c 2f       	mov	r22, r28
 184:	66 1f       	adc	r22, r22
 186:	66 27       	eor	r22, r22
 188:	66 1f       	adc	r22, r22
 18a:	87 e0       	ldi	r24, 0x07	; 7
 18c:	0e 94 c7 01 	call	0x38e	; 0x38e <DIO_setPinValue>
 190:	0e 94 56 00 	call	0xac	; 0xac <LCD_pulse>
 194:	6c 2f       	mov	r22, r28
 196:	61 70       	andi	r22, 0x01	; 1
 198:	84 e0       	ldi	r24, 0x04	; 4
 19a:	0e 94 c7 01 	call	0x38e	; 0x38e <DIO_setPinValue>
 19e:	c1 fb       	bst	r28, 1
 1a0:	66 27       	eor	r22, r22
 1a2:	60 f9       	bld	r22, 0
 1a4:	85 e0       	ldi	r24, 0x05	; 5
 1a6:	0e 94 c7 01 	call	0x38e	; 0x38e <DIO_setPinValue>
 1aa:	c2 fb       	bst	r28, 2
 1ac:	66 27       	eor	r22, r22
 1ae:	60 f9       	bld	r22, 0
 1b0:	86 e0       	ldi	r24, 0x06	; 6
 1b2:	0e 94 c7 01 	call	0x38e	; 0x38e <DIO_setPinValue>
 1b6:	c3 fb       	bst	r28, 3
 1b8:	66 27       	eor	r22, r22
 1ba:	60 f9       	bld	r22, 0
 1bc:	87 e0       	ldi	r24, 0x07	; 7
 1be:	0e 94 c7 01 	call	0x38e	; 0x38e <DIO_setPinValue>
 1c2:	0e 94 56 00 	call	0xac	; 0xac <LCD_pulse>
 1c6:	cf 91       	pop	r28
 1c8:	08 95       	ret

000001ca <LCD_int>:
 1ca:	61 e0       	ldi	r22, 0x01	; 1
 1cc:	84 e0       	ldi	r24, 0x04	; 4
 1ce:	0e 94 3c 01 	call	0x278	; 0x278 <DIO_setPinDir>
 1d2:	61 e0       	ldi	r22, 0x01	; 1
 1d4:	85 e0       	ldi	r24, 0x05	; 5
 1d6:	0e 94 3c 01 	call	0x278	; 0x278 <DIO_setPinDir>
 1da:	61 e0       	ldi	r22, 0x01	; 1
 1dc:	86 e0       	ldi	r24, 0x06	; 6
 1de:	0e 94 3c 01 	call	0x278	; 0x278 <DIO_setPinDir>
 1e2:	61 e0       	ldi	r22, 0x01	; 1
 1e4:	87 e0       	ldi	r24, 0x07	; 7
 1e6:	0e 94 3c 01 	call	0x278	; 0x278 <DIO_setPinDir>
 1ea:	61 e0       	ldi	r22, 0x01	; 1
 1ec:	8b e0       	ldi	r24, 0x0B	; 11
 1ee:	0e 94 3c 01 	call	0x278	; 0x278 <DIO_setPinDir>
 1f2:	61 e0       	ldi	r22, 0x01	; 1
 1f4:	8a e0       	ldi	r24, 0x0A	; 10
 1f6:	0e 94 3c 01 	call	0x278	; 0x278 <DIO_setPinDir>
 1fa:	61 e0       	ldi	r22, 0x01	; 1
 1fc:	89 e0       	ldi	r24, 0x09	; 9
 1fe:	0e 94 3c 01 	call	0x278	; 0x278 <DIO_setPinDir>
 202:	82 e0       	ldi	r24, 0x02	; 2
 204:	0e 94 a5 00 	call	0x14a	; 0x14a <LCD_sendCmd>
 208:	2f ef       	ldi	r18, 0xFF	; 255
 20a:	86 e7       	ldi	r24, 0x76	; 118
 20c:	91 e0       	ldi	r25, 0x01	; 1
 20e:	21 50       	subi	r18, 0x01	; 1
 210:	80 40       	sbci	r24, 0x00	; 0
 212:	90 40       	sbci	r25, 0x00	; 0
 214:	e1 f7       	brne	.-8      	; 0x20e <LCD_int+0x44>
 216:	00 c0       	rjmp	.+0      	; 0x218 <LCD_int+0x4e>
 218:	00 00       	nop
 21a:	88 e2       	ldi	r24, 0x28	; 40
 21c:	0e 94 a5 00 	call	0x14a	; 0x14a <LCD_sendCmd>
 220:	8f e9       	ldi	r24, 0x9F	; 159
 222:	9f e0       	ldi	r25, 0x0F	; 15
 224:	01 97       	sbiw	r24, 0x01	; 1
 226:	f1 f7       	brne	.-4      	; 0x224 <LCD_int+0x5a>
 228:	00 c0       	rjmp	.+0      	; 0x22a <LCD_int+0x60>
 22a:	00 00       	nop
 22c:	8f e0       	ldi	r24, 0x0F	; 15
 22e:	0e 94 a5 00 	call	0x14a	; 0x14a <LCD_sendCmd>
 232:	8f e9       	ldi	r24, 0x9F	; 159
 234:	9f e0       	ldi	r25, 0x0F	; 15
 236:	01 97       	sbiw	r24, 0x01	; 1
 238:	f1 f7       	brne	.-4      	; 0x236 <LCD_int+0x6c>
 23a:	00 c0       	rjmp	.+0      	; 0x23c <LCD_int+0x72>
 23c:	00 00       	nop
 23e:	81 e0       	ldi	r24, 0x01	; 1
 240:	0e 94 a5 00 	call	0x14a	; 0x14a <LCD_sendCmd>
 244:	8f e3       	ldi	r24, 0x3F	; 63
 246:	9f e1       	ldi	r25, 0x1F	; 31
 248:	01 97       	sbiw	r24, 0x01	; 1
 24a:	f1 f7       	brne	.-4      	; 0x248 <LCD_int+0x7e>
 24c:	00 c0       	rjmp	.+0      	; 0x24e <LCD_int+0x84>
 24e:	00 00       	nop
 250:	86 e0       	ldi	r24, 0x06	; 6
 252:	0e 94 a5 00 	call	0x14a	; 0x14a <LCD_sendCmd>
 256:	08 95       	ret

00000258 <LCD_clearDis>:
 258:	81 e0       	ldi	r24, 0x01	; 1
 25a:	0e 94 a5 00 	call	0x14a	; 0x14a <LCD_sendCmd>
 25e:	08 95       	ret

00000260 <LCD_GoTo>:

void LCD_GoTo(u8 x, u8 line ){
	if (line==0)
 260:	61 11       	cpse	r22, r1
 262:	04 c0       	rjmp	.+8      	; 0x26c <LCD_GoTo+0xc>
	{
		LCD_sendCmd(0b10000000+x);
 264:	80 58       	subi	r24, 0x80	; 128
 266:	0e 94 a5 00 	call	0x14a	; 0x14a <LCD_sendCmd>
 26a:	08 95       	ret
	}
	else if (line==1)
 26c:	61 30       	cpi	r22, 0x01	; 1
 26e:	19 f4       	brne	.+6      	; 0x276 <LCD_GoTo+0x16>
	{
		LCD_sendCmd(0b11000000+x);
 270:	80 54       	subi	r24, 0x40	; 64
 272:	0e 94 a5 00 	call	0x14a	; 0x14a <LCD_sendCmd>
 276:	08 95       	ret

00000278 <DIO_setPinDir>:

#include "DIO_INT.h"

void DIO_setPinDir(u8 pinNum, u8 dir){
	//PORTA
	if (pinNum>=0 && pinNum<=7) 
 278:	88 30       	cpi	r24, 0x08	; 8
 27a:	00 f5       	brcc	.+64     	; 0x2bc <DIO_setPinDir+0x44>
	{
		if (dir==DIO_INPUT){
 27c:	61 11       	cpse	r22, r1
 27e:	0e c0       	rjmp	.+28     	; 0x29c <DIO_setPinDir+0x24>
			CLEAR_BIT(DDRA,pinNum);
 280:	4a b3       	in	r20, 0x1a	; 26
 282:	21 e0       	ldi	r18, 0x01	; 1
 284:	30 e0       	ldi	r19, 0x00	; 0
 286:	b9 01       	movw	r22, r18
 288:	02 c0       	rjmp	.+4      	; 0x28e <DIO_setPinDir+0x16>
 28a:	66 0f       	add	r22, r22
 28c:	77 1f       	adc	r23, r23
 28e:	8a 95       	dec	r24
 290:	e2 f7       	brpl	.-8      	; 0x28a <DIO_setPinDir+0x12>
 292:	cb 01       	movw	r24, r22
 294:	80 95       	com	r24
 296:	84 23       	and	r24, r20
 298:	8a bb       	out	0x1a, r24	; 26
 29a:	08 95       	ret
		}
		else if(dir==DIO_OUTPUT){
 29c:	61 30       	cpi	r22, 0x01	; 1
 29e:	09 f0       	breq	.+2      	; 0x2a2 <DIO_setPinDir+0x2a>
 2a0:	75 c0       	rjmp	.+234    	; 0x38c <DIO_setPinDir+0x114>
			SET_BIT(DDRA,pinNum);
 2a2:	4a b3       	in	r20, 0x1a	; 26
 2a4:	21 e0       	ldi	r18, 0x01	; 1
 2a6:	30 e0       	ldi	r19, 0x00	; 0
 2a8:	b9 01       	movw	r22, r18
 2aa:	02 c0       	rjmp	.+4      	; 0x2b0 <DIO_setPinDir+0x38>
 2ac:	66 0f       	add	r22, r22
 2ae:	77 1f       	adc	r23, r23
 2b0:	8a 95       	dec	r24
 2b2:	e2 f7       	brpl	.-8      	; 0x2ac <DIO_setPinDir+0x34>
 2b4:	cb 01       	movw	r24, r22
 2b6:	84 2b       	or	r24, r20
 2b8:	8a bb       	out	0x1a, r24	; 26
 2ba:	08 95       	ret
		}
	}
	else //PORTB
	if (pinNum>=8 && pinNum<=15) 
 2bc:	98 ef       	ldi	r25, 0xF8	; 248
 2be:	98 0f       	add	r25, r24
 2c0:	98 30       	cpi	r25, 0x08	; 8
 2c2:	00 f5       	brcc	.+64     	; 0x304 <DIO_setPinDir+0x8c>
	{
		pinNum=pinNum-8;
		if (dir==DIO_INPUT){
 2c4:	61 11       	cpse	r22, r1
 2c6:	0e c0       	rjmp	.+28     	; 0x2e4 <DIO_setPinDir+0x6c>
			CLEAR_BIT(DDRB,pinNum);
 2c8:	47 b3       	in	r20, 0x17	; 23
 2ca:	21 e0       	ldi	r18, 0x01	; 1
 2cc:	30 e0       	ldi	r19, 0x00	; 0
 2ce:	b9 01       	movw	r22, r18
 2d0:	02 c0       	rjmp	.+4      	; 0x2d6 <DIO_setPinDir+0x5e>
 2d2:	66 0f       	add	r22, r22
 2d4:	77 1f       	adc	r23, r23
 2d6:	9a 95       	dec	r25
 2d8:	e2 f7       	brpl	.-8      	; 0x2d2 <DIO_setPinDir+0x5a>
 2da:	cb 01       	movw	r24, r22
 2dc:	80 95       	com	r24
 2de:	84 23       	and	r24, r20
 2e0:	87 bb       	out	0x17, r24	; 23
 2e2:	08 95       	ret
		}
		else if(dir==DIO_OUTPUT){
 2e4:	61 30       	cpi	r22, 0x01	; 1
 2e6:	09 f0       	breq	.+2      	; 0x2ea <DIO_setPinDir+0x72>
 2e8:	51 c0       	rjmp	.+162    	; 0x38c <DIO_setPinDir+0x114>
			SET_BIT(DDRB,pinNum);
 2ea:	47 b3       	in	r20, 0x17	; 23
 2ec:	21 e0       	ldi	r18, 0x01	; 1
 2ee:	30 e0       	ldi	r19, 0x00	; 0
 2f0:	b9 01       	movw	r22, r18
 2f2:	02 c0       	rjmp	.+4      	; 0x2f8 <DIO_setPinDir+0x80>
 2f4:	66 0f       	add	r22, r22
 2f6:	77 1f       	adc	r23, r23
 2f8:	9a 95       	dec	r25
 2fa:	e2 f7       	brpl	.-8      	; 0x2f4 <DIO_setPinDir+0x7c>
 2fc:	cb 01       	movw	r24, r22
 2fe:	84 2b       	or	r24, r20
 300:	87 bb       	out	0x17, r24	; 23
 302:	08 95       	ret
		}
	}
	else //PORTC
	if (pinNum>=16 && pinNum<=23) 
 304:	90 ef       	ldi	r25, 0xF0	; 240
 306:	98 0f       	add	r25, r24
 308:	98 30       	cpi	r25, 0x08	; 8
 30a:	f8 f4       	brcc	.+62     	; 0x34a <DIO_setPinDir+0xd2>
	{
		pinNum=pinNum-16;
		if (dir==DIO_INPUT){
 30c:	61 11       	cpse	r22, r1
 30e:	0e c0       	rjmp	.+28     	; 0x32c <DIO_setPinDir+0xb4>
			CLEAR_BIT(DDRC,pinNum);
 310:	44 b3       	in	r20, 0x14	; 20
 312:	21 e0       	ldi	r18, 0x01	; 1
 314:	30 e0       	ldi	r19, 0x00	; 0
 316:	b9 01       	movw	r22, r18
 318:	02 c0       	rjmp	.+4      	; 0x31e <DIO_setPinDir+0xa6>
 31a:	66 0f       	add	r22, r22
 31c:	77 1f       	adc	r23, r23
 31e:	9a 95       	dec	r25
 320:	e2 f7       	brpl	.-8      	; 0x31a <DIO_setPinDir+0xa2>
 322:	cb 01       	movw	r24, r22
 324:	80 95       	com	r24
 326:	84 23       	and	r24, r20
 328:	84 bb       	out	0x14, r24	; 20
 32a:	08 95       	ret
		}
		else if(dir==DIO_OUTPUT){
 32c:	61 30       	cpi	r22, 0x01	; 1
 32e:	71 f5       	brne	.+92     	; 0x38c <DIO_setPinDir+0x114>
			SET_BIT(DDRC,pinNum);
 330:	44 b3       	in	r20, 0x14	; 20
 332:	21 e0       	ldi	r18, 0x01	; 1
 334:	30 e0       	ldi	r19, 0x00	; 0
 336:	b9 01       	movw	r22, r18
 338:	02 c0       	rjmp	.+4      	; 0x33e <DIO_setPinDir+0xc6>
 33a:	66 0f       	add	r22, r22
 33c:	77 1f       	adc	r23, r23
 33e:	9a 95       	dec	r25
 340:	e2 f7       	brpl	.-8      	; 0x33a <DIO_setPinDir+0xc2>
 342:	cb 01       	movw	r24, r22
 344:	84 2b       	or	r24, r20
 346:	84 bb       	out	0x14, r24	; 20
 348:	08 95       	ret
		}
	}
	else //PORTD
	if (pinNum>=24 && pinNum<=31) 
 34a:	88 51       	subi	r24, 0x18	; 24
 34c:	88 30       	cpi	r24, 0x08	; 8
 34e:	f0 f4       	brcc	.+60     	; 0x38c <DIO_setPinDir+0x114>
	{
		pinNum=pinNum-24;
		if (dir==DIO_INPUT){
 350:	61 11       	cpse	r22, r1
 352:	0e c0       	rjmp	.+28     	; 0x370 <DIO_setPinDir+0xf8>
			CLEAR_BIT(DDRC,pinNum);
 354:	44 b3       	in	r20, 0x14	; 20
 356:	21 e0       	ldi	r18, 0x01	; 1
 358:	30 e0       	ldi	r19, 0x00	; 0
 35a:	b9 01       	movw	r22, r18
 35c:	02 c0       	rjmp	.+4      	; 0x362 <DIO_setPinDir+0xea>
 35e:	66 0f       	add	r22, r22
 360:	77 1f       	adc	r23, r23
 362:	8a 95       	dec	r24
 364:	e2 f7       	brpl	.-8      	; 0x35e <DIO_setPinDir+0xe6>
 366:	cb 01       	movw	r24, r22
 368:	80 95       	com	r24
 36a:	84 23       	and	r24, r20
 36c:	84 bb       	out	0x14, r24	; 20
 36e:	08 95       	ret
		}
		else if(dir==DIO_OUTPUT){
 370:	61 30       	cpi	r22, 0x01	; 1
 372:	61 f4       	brne	.+24     	; 0x38c <DIO_setPinDir+0x114>
			SET_BIT(DDRC,pinNum);
 374:	44 b3       	in	r20, 0x14	; 20
 376:	21 e0       	ldi	r18, 0x01	; 1
 378:	30 e0       	ldi	r19, 0x00	; 0
 37a:	b9 01       	movw	r22, r18
 37c:	02 c0       	rjmp	.+4      	; 0x382 <DIO_setPinDir+0x10a>
 37e:	66 0f       	add	r22, r22
 380:	77 1f       	adc	r23, r23
 382:	8a 95       	dec	r24
 384:	e2 f7       	brpl	.-8      	; 0x37e <DIO_setPinDir+0x106>
 386:	cb 01       	movw	r24, r22
 388:	84 2b       	or	r24, r20
 38a:	84 bb       	out	0x14, r24	; 20
 38c:	08 95       	ret

0000038e <DIO_setPinValue>:
	}
}

void DIO_setPinValue(u8 pinNum, u8 level){
	//PORTA
	if (pinNum>=0 && pinNum<=7) 
 38e:	88 30       	cpi	r24, 0x08	; 8
 390:	00 f5       	brcc	.+64     	; 0x3d2 <DIO_setPinValue+0x44>
	{
		if (level==DIO_LOW){
 392:	61 11       	cpse	r22, r1
 394:	0e c0       	rjmp	.+28     	; 0x3b2 <DIO_setPinValue+0x24>
			CLEAR_BIT(PORTA,pinNum);
 396:	4b b3       	in	r20, 0x1b	; 27
 398:	21 e0       	ldi	r18, 0x01	; 1
 39a:	30 e0       	ldi	r19, 0x00	; 0
 39c:	b9 01       	movw	r22, r18
 39e:	02 c0       	rjmp	.+4      	; 0x3a4 <DIO_setPinValue+0x16>
 3a0:	66 0f       	add	r22, r22
 3a2:	77 1f       	adc	r23, r23
 3a4:	8a 95       	dec	r24
 3a6:	e2 f7       	brpl	.-8      	; 0x3a0 <DIO_setPinValue+0x12>
 3a8:	cb 01       	movw	r24, r22
 3aa:	80 95       	com	r24
 3ac:	84 23       	and	r24, r20
 3ae:	8b bb       	out	0x1b, r24	; 27
 3b0:	08 95       	ret
		}
		else if(level==DIO_HIGH){
 3b2:	61 30       	cpi	r22, 0x01	; 1
 3b4:	09 f0       	breq	.+2      	; 0x3b8 <DIO_setPinValue+0x2a>
 3b6:	75 c0       	rjmp	.+234    	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
			SET_BIT(PORTA,pinNum);
 3b8:	4b b3       	in	r20, 0x1b	; 27
 3ba:	21 e0       	ldi	r18, 0x01	; 1
 3bc:	30 e0       	ldi	r19, 0x00	; 0
 3be:	b9 01       	movw	r22, r18
 3c0:	02 c0       	rjmp	.+4      	; 0x3c6 <DIO_setPinValue+0x38>
 3c2:	66 0f       	add	r22, r22
 3c4:	77 1f       	adc	r23, r23
 3c6:	8a 95       	dec	r24
 3c8:	e2 f7       	brpl	.-8      	; 0x3c2 <DIO_setPinValue+0x34>
 3ca:	cb 01       	movw	r24, r22
 3cc:	84 2b       	or	r24, r20
 3ce:	8b bb       	out	0x1b, r24	; 27
 3d0:	08 95       	ret
		}
	}
	else //PORTB
	if (pinNum>=8 && pinNum<=15) 
 3d2:	98 ef       	ldi	r25, 0xF8	; 248
 3d4:	98 0f       	add	r25, r24
 3d6:	98 30       	cpi	r25, 0x08	; 8
 3d8:	00 f5       	brcc	.+64     	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
	{
		pinNum=pinNum-8;
		if (level==DIO_LOW){
 3da:	61 11       	cpse	r22, r1
 3dc:	0e c0       	rjmp	.+28     	; 0x3fa <DIO_setPinValue+0x6c>
			CLEAR_BIT(PORTB,pinNum);
 3de:	48 b3       	in	r20, 0x18	; 24
 3e0:	21 e0       	ldi	r18, 0x01	; 1
 3e2:	30 e0       	ldi	r19, 0x00	; 0
 3e4:	b9 01       	movw	r22, r18
 3e6:	02 c0       	rjmp	.+4      	; 0x3ec <DIO_setPinValue+0x5e>
 3e8:	66 0f       	add	r22, r22
 3ea:	77 1f       	adc	r23, r23
 3ec:	9a 95       	dec	r25
 3ee:	e2 f7       	brpl	.-8      	; 0x3e8 <DIO_setPinValue+0x5a>
 3f0:	cb 01       	movw	r24, r22
 3f2:	80 95       	com	r24
 3f4:	84 23       	and	r24, r20
 3f6:	88 bb       	out	0x18, r24	; 24
 3f8:	08 95       	ret
		}
		else if(level==DIO_HIGH){
 3fa:	61 30       	cpi	r22, 0x01	; 1
 3fc:	09 f0       	breq	.+2      	; 0x400 <__EEPROM_REGION_LENGTH__>
 3fe:	51 c0       	rjmp	.+162    	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
			SET_BIT(PORTB,pinNum);
 400:	48 b3       	in	r20, 0x18	; 24
 402:	21 e0       	ldi	r18, 0x01	; 1
 404:	30 e0       	ldi	r19, 0x00	; 0
 406:	b9 01       	movw	r22, r18
 408:	02 c0       	rjmp	.+4      	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 40a:	66 0f       	add	r22, r22
 40c:	77 1f       	adc	r23, r23
 40e:	9a 95       	dec	r25
 410:	e2 f7       	brpl	.-8      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 412:	cb 01       	movw	r24, r22
 414:	84 2b       	or	r24, r20
 416:	88 bb       	out	0x18, r24	; 24
 418:	08 95       	ret
		}
	}
	else //PORTC
	if (pinNum>=16 && pinNum<=23) 
 41a:	90 ef       	ldi	r25, 0xF0	; 240
 41c:	98 0f       	add	r25, r24
 41e:	98 30       	cpi	r25, 0x08	; 8
 420:	f8 f4       	brcc	.+62     	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
	{
		pinNum=pinNum-16;
		if (level==DIO_LOW){
 422:	61 11       	cpse	r22, r1
 424:	0e c0       	rjmp	.+28     	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
			CLEAR_BIT(PORTC,pinNum);
 426:	45 b3       	in	r20, 0x15	; 21
 428:	21 e0       	ldi	r18, 0x01	; 1
 42a:	30 e0       	ldi	r19, 0x00	; 0
 42c:	b9 01       	movw	r22, r18
 42e:	02 c0       	rjmp	.+4      	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 430:	66 0f       	add	r22, r22
 432:	77 1f       	adc	r23, r23
 434:	9a 95       	dec	r25
 436:	e2 f7       	brpl	.-8      	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
 438:	cb 01       	movw	r24, r22
 43a:	80 95       	com	r24
 43c:	84 23       	and	r24, r20
 43e:	85 bb       	out	0x15, r24	; 21
 440:	08 95       	ret
		}
		else if(level==DIO_HIGH){
 442:	61 30       	cpi	r22, 0x01	; 1
 444:	71 f5       	brne	.+92     	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
			SET_BIT(PORTC,pinNum);
 446:	45 b3       	in	r20, 0x15	; 21
 448:	21 e0       	ldi	r18, 0x01	; 1
 44a:	30 e0       	ldi	r19, 0x00	; 0
 44c:	b9 01       	movw	r22, r18
 44e:	02 c0       	rjmp	.+4      	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
 450:	66 0f       	add	r22, r22
 452:	77 1f       	adc	r23, r23
 454:	9a 95       	dec	r25
 456:	e2 f7       	brpl	.-8      	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
 458:	cb 01       	movw	r24, r22
 45a:	84 2b       	or	r24, r20
 45c:	85 bb       	out	0x15, r24	; 21
 45e:	08 95       	ret
		}
	}
	else //PORTD
	if (pinNum>=24 && pinNum<=31) 
 460:	88 51       	subi	r24, 0x18	; 24
 462:	88 30       	cpi	r24, 0x08	; 8
 464:	f0 f4       	brcc	.+60     	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
	{
		pinNum=pinNum-24;
		if (level==DIO_LOW){
 466:	61 11       	cpse	r22, r1
 468:	0e c0       	rjmp	.+28     	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
			CLEAR_BIT(PORTD,pinNum);
 46a:	42 b3       	in	r20, 0x12	; 18
 46c:	21 e0       	ldi	r18, 0x01	; 1
 46e:	30 e0       	ldi	r19, 0x00	; 0
 470:	b9 01       	movw	r22, r18
 472:	02 c0       	rjmp	.+4      	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
 474:	66 0f       	add	r22, r22
 476:	77 1f       	adc	r23, r23
 478:	8a 95       	dec	r24
 47a:	e2 f7       	brpl	.-8      	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
 47c:	cb 01       	movw	r24, r22
 47e:	80 95       	com	r24
 480:	84 23       	and	r24, r20
 482:	82 bb       	out	0x12, r24	; 18
 484:	08 95       	ret
		}
		else if(level==DIO_HIGH){
 486:	61 30       	cpi	r22, 0x01	; 1
 488:	61 f4       	brne	.+24     	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
			SET_BIT(PORTD,pinNum);
 48a:	42 b3       	in	r20, 0x12	; 18
 48c:	21 e0       	ldi	r18, 0x01	; 1
 48e:	30 e0       	ldi	r19, 0x00	; 0
 490:	b9 01       	movw	r22, r18
 492:	02 c0       	rjmp	.+4      	; 0x498 <__EEPROM_REGION_LENGTH__+0x98>
 494:	66 0f       	add	r22, r22
 496:	77 1f       	adc	r23, r23
 498:	8a 95       	dec	r24
 49a:	e2 f7       	brpl	.-8      	; 0x494 <__EEPROM_REGION_LENGTH__+0x94>
 49c:	cb 01       	movw	r24, r22
 49e:	84 2b       	or	r24, r20
 4a0:	82 bb       	out	0x12, r24	; 18
 4a2:	08 95       	ret

000004a4 <_exit>:
 4a4:	f8 94       	cli

000004a6 <__stop_program>:
 4a6:	ff cf       	rjmp	.-2      	; 0x4a6 <__stop_program>
