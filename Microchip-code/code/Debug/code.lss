
code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000610  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000664  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000664  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000694  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000080  00000000  00000000  000006d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001035  00000000  00000000  00000750  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006f7  00000000  00000000  00001785  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000006bb  00000000  00000000  00001e7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000b4  00000000  00000000  00002538  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003e5  00000000  00000000  000025ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000050a  00000000  00000000  000029d1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00002edb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	8f 00       	.word	0x008f	; ????
  56:	ab 00       	.word	0x00ab	; ????
  58:	c8 00       	.word	0x00c8	; ????
  5a:	e5 00       	.word	0x00e5	; ????
  5c:	02 01       	movw	r0, r4
  5e:	1f 01       	movw	r2, r30
  60:	3c 01       	movw	r6, r24
  62:	59 01       	movw	r10, r18
  64:	76 01       	movw	r14, r12
  66:	93 01       	movw	r18, r6

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf e5       	ldi	r28, 0x5F	; 95
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 06 03 	jmp	0x60c	; 0x60c <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
 */ 

#include "Sess16/Task/ses.h"

int main(){
	test_code();
  80:	0e 94 45 00 	call	0x8a	; 0x8a <test_code>
	return 0;
  84:	80 e0       	ldi	r24, 0x00	; 0
  86:	90 e0       	ldi	r25, 0x00	; 0
  88:	08 95       	ret

0000008a <test_code>:

int test_code()
{
	u8 counter = 0;
	//7-segment
	DIO_setPinDir(DIO_PINC1,DIO_OUTPUT);
  8a:	61 e0       	ldi	r22, 0x01	; 1
  8c:	81 e1       	ldi	r24, 0x11	; 17
  8e:	0e 94 b0 01 	call	0x360	; 0x360 <DIO_setPinDir>
	DIO_setPinDir(DIO_PINC2,DIO_OUTPUT);
  92:	61 e0       	ldi	r22, 0x01	; 1
  94:	82 e1       	ldi	r24, 0x12	; 18
  96:	0e 94 b0 01 	call	0x360	; 0x360 <DIO_setPinDir>
	DIO_setPinDir(DIO_PINC3,DIO_OUTPUT);
  9a:	61 e0       	ldi	r22, 0x01	; 1
  9c:	83 e1       	ldi	r24, 0x13	; 19
  9e:	0e 94 b0 01 	call	0x360	; 0x360 <DIO_setPinDir>
	DIO_setPinDir(DIO_PINC4,DIO_OUTPUT);
  a2:	61 e0       	ldi	r22, 0x01	; 1
  a4:	84 e1       	ldi	r24, 0x14	; 20
  a6:	0e 94 b0 01 	call	0x360	; 0x360 <DIO_setPinDir>
	DIO_setPinDir(DIO_PINC5,DIO_OUTPUT);
  aa:	61 e0       	ldi	r22, 0x01	; 1
  ac:	85 e1       	ldi	r24, 0x15	; 21
  ae:	0e 94 b0 01 	call	0x360	; 0x360 <DIO_setPinDir>
	DIO_setPinDir(DIO_PINC6,DIO_OUTPUT);
  b2:	61 e0       	ldi	r22, 0x01	; 1
  b4:	86 e1       	ldi	r24, 0x16	; 22
  b6:	0e 94 b0 01 	call	0x360	; 0x360 <DIO_setPinDir>
	DIO_setPinDir(DIO_PINC7,DIO_OUTPUT);
  ba:	61 e0       	ldi	r22, 0x01	; 1
  bc:	87 e1       	ldi	r24, 0x17	; 23
  be:	0e 94 b0 01 	call	0x360	; 0x360 <DIO_setPinDir>
	//counter button
	DIO_setPinDir(DIO_PINA2,DIO_INPUT);
  c2:	60 e0       	ldi	r22, 0x00	; 0
  c4:	82 e0       	ldi	r24, 0x02	; 2
  c6:	0e 94 b0 01 	call	0x360	; 0x360 <DIO_setPinDir>
	DIO_setPullUp(DIO_PINA2);
  ca:	82 e0       	ldi	r24, 0x02	; 2
  cc:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <DIO_setPullUp>
	//reset button
	DIO_setPinDir(DIO_PINB6,DIO_INPUT);
  d0:	60 e0       	ldi	r22, 0x00	; 0
  d2:	8e e0       	ldi	r24, 0x0E	; 14
  d4:	0e 94 b0 01 	call	0x360	; 0x360 <DIO_setPinDir>
	DIO_setPullUp(DIO_PINB6);
  d8:	8e e0       	ldi	r24, 0x0E	; 14
  da:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <DIO_setPullUp>

#include "Sess16/Task/ses.h"

int test_code()
{
	u8 counter = 0;
  de:	c0 e0       	ldi	r28, 0x00	; 0
	DIO_setPinDir(DIO_PINB6,DIO_INPUT);
	DIO_setPullUp(DIO_PINB6);
	while (1)
	{
		//counter button is pressed
		if (DIO_readPinValue(DIO_PINA2)==DIO_LOW)
  e0:	82 e0       	ldi	r24, 0x02	; 2
  e2:	0e 94 c6 02 	call	0x58c	; 0x58c <DIO_readPinValue>
  e6:	81 11       	cpse	r24, r1
  e8:	0a c0       	rjmp	.+20     	; 0xfe <test_code+0x74>
		{
			counter++;
  ea:	cf 5f       	subi	r28, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ec:	2f ef       	ldi	r18, 0xFF	; 255
  ee:	89 e6       	ldi	r24, 0x69	; 105
  f0:	98 e1       	ldi	r25, 0x18	; 24
  f2:	21 50       	subi	r18, 0x01	; 1
  f4:	80 40       	sbci	r24, 0x00	; 0
  f6:	90 40       	sbci	r25, 0x00	; 0
  f8:	e1 f7       	brne	.-8      	; 0xf2 <test_code+0x68>
  fa:	00 c0       	rjmp	.+0      	; 0xfc <test_code+0x72>
  fc:	00 00       	nop
			_delay_ms(500);
		}
		//reset button is pressed
		if (DIO_readPinValue(DIO_PINB6)==DIO_LOW)
  fe:	8e e0       	ldi	r24, 0x0E	; 14
 100:	0e 94 c6 02 	call	0x58c	; 0x58c <DIO_readPinValue>
 104:	81 11       	cpse	r24, r1
 106:	01 c0       	rjmp	.+2      	; 0x10a <test_code+0x80>
		{
			counter=0;
 108:	c0 e0       	ldi	r28, 0x00	; 0
		}
		switch(counter){
 10a:	8c 2f       	mov	r24, r28
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	8a 30       	cpi	r24, 0x0A	; 10
 110:	91 05       	cpc	r25, r1
 112:	30 f7       	brcc	.-52     	; 0xe0 <test_code+0x56>
 114:	fc 01       	movw	r30, r24
 116:	e6 5d       	subi	r30, 0xD6	; 214
 118:	ff 4f       	sbci	r31, 0xFF	; 255
 11a:	0c 94 00 03 	jmp	0x600	; 0x600 <__tablejump2__>
			case 0:
				DIO_setPinValue(DIO_PINC1,DIO_HIGH);
 11e:	61 e0       	ldi	r22, 0x01	; 1
 120:	81 e1       	ldi	r24, 0x11	; 17
 122:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC2,DIO_HIGH);
 126:	61 e0       	ldi	r22, 0x01	; 1
 128:	82 e1       	ldi	r24, 0x12	; 18
 12a:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC3,DIO_HIGH);
 12e:	61 e0       	ldi	r22, 0x01	; 1
 130:	83 e1       	ldi	r24, 0x13	; 19
 132:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC4,DIO_HIGH);
 136:	61 e0       	ldi	r22, 0x01	; 1
 138:	84 e1       	ldi	r24, 0x14	; 20
 13a:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC5,DIO_HIGH);
 13e:	61 e0       	ldi	r22, 0x01	; 1
 140:	85 e1       	ldi	r24, 0x15	; 21
 142:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC6,DIO_HIGH);
 146:	61 e0       	ldi	r22, 0x01	; 1
 148:	86 e1       	ldi	r24, 0x16	; 22
 14a:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC7,DIO_HIGH);
 14e:	61 e0       	ldi	r22, 0x01	; 1
 150:	87 e1       	ldi	r24, 0x17	; 23
 152:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
			case 1:
				DIO_setPinValue(DIO_PINC1,DIO_LOW);
 156:	60 e0       	ldi	r22, 0x00	; 0
 158:	81 e1       	ldi	r24, 0x11	; 17
 15a:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC2,DIO_HIGH);
 15e:	61 e0       	ldi	r22, 0x01	; 1
 160:	82 e1       	ldi	r24, 0x12	; 18
 162:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC3,DIO_HIGH);
 166:	61 e0       	ldi	r22, 0x01	; 1
 168:	83 e1       	ldi	r24, 0x13	; 19
 16a:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC4,DIO_LOW);
 16e:	60 e0       	ldi	r22, 0x00	; 0
 170:	84 e1       	ldi	r24, 0x14	; 20
 172:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC5,DIO_LOW);
 176:	60 e0       	ldi	r22, 0x00	; 0
 178:	85 e1       	ldi	r24, 0x15	; 21
 17a:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC6,DIO_LOW);
 17e:	60 e0       	ldi	r22, 0x00	; 0
 180:	86 e1       	ldi	r24, 0x16	; 22
 182:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC7,DIO_LOW);
 186:	60 e0       	ldi	r22, 0x00	; 0
 188:	87 e1       	ldi	r24, 0x17	; 23
 18a:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				break;
 18e:	a8 cf       	rjmp	.-176    	; 0xe0 <test_code+0x56>
			case 2:
				DIO_setPinValue(DIO_PINC1,DIO_HIGH);
 190:	61 e0       	ldi	r22, 0x01	; 1
 192:	81 e1       	ldi	r24, 0x11	; 17
 194:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC2,DIO_HIGH);
 198:	61 e0       	ldi	r22, 0x01	; 1
 19a:	82 e1       	ldi	r24, 0x12	; 18
 19c:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC3,DIO_LOW);
 1a0:	60 e0       	ldi	r22, 0x00	; 0
 1a2:	83 e1       	ldi	r24, 0x13	; 19
 1a4:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC4,DIO_HIGH);
 1a8:	61 e0       	ldi	r22, 0x01	; 1
 1aa:	84 e1       	ldi	r24, 0x14	; 20
 1ac:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC5,DIO_HIGH);
 1b0:	61 e0       	ldi	r22, 0x01	; 1
 1b2:	85 e1       	ldi	r24, 0x15	; 21
 1b4:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC6,DIO_LOW);
 1b8:	60 e0       	ldi	r22, 0x00	; 0
 1ba:	86 e1       	ldi	r24, 0x16	; 22
 1bc:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC7,DIO_HIGH);
 1c0:	61 e0       	ldi	r22, 0x01	; 1
 1c2:	87 e1       	ldi	r24, 0x17	; 23
 1c4:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				break;
 1c8:	8b cf       	rjmp	.-234    	; 0xe0 <test_code+0x56>
			case 3:
				DIO_setPinValue(DIO_PINC1,DIO_HIGH);
 1ca:	61 e0       	ldi	r22, 0x01	; 1
 1cc:	81 e1       	ldi	r24, 0x11	; 17
 1ce:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC2,DIO_HIGH);
 1d2:	61 e0       	ldi	r22, 0x01	; 1
 1d4:	82 e1       	ldi	r24, 0x12	; 18
 1d6:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC3,DIO_HIGH);
 1da:	61 e0       	ldi	r22, 0x01	; 1
 1dc:	83 e1       	ldi	r24, 0x13	; 19
 1de:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC4,DIO_HIGH);
 1e2:	61 e0       	ldi	r22, 0x01	; 1
 1e4:	84 e1       	ldi	r24, 0x14	; 20
 1e6:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC5,DIO_LOW);
 1ea:	60 e0       	ldi	r22, 0x00	; 0
 1ec:	85 e1       	ldi	r24, 0x15	; 21
 1ee:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC6,DIO_LOW);
 1f2:	60 e0       	ldi	r22, 0x00	; 0
 1f4:	86 e1       	ldi	r24, 0x16	; 22
 1f6:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC7,DIO_HIGH);
 1fa:	61 e0       	ldi	r22, 0x01	; 1
 1fc:	87 e1       	ldi	r24, 0x17	; 23
 1fe:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				break;
 202:	6e cf       	rjmp	.-292    	; 0xe0 <test_code+0x56>
			case 4:
				DIO_setPinValue(DIO_PINC1,DIO_LOW);
 204:	60 e0       	ldi	r22, 0x00	; 0
 206:	81 e1       	ldi	r24, 0x11	; 17
 208:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC2,DIO_HIGH);
 20c:	61 e0       	ldi	r22, 0x01	; 1
 20e:	82 e1       	ldi	r24, 0x12	; 18
 210:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC3,DIO_HIGH);
 214:	61 e0       	ldi	r22, 0x01	; 1
 216:	83 e1       	ldi	r24, 0x13	; 19
 218:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC4,DIO_LOW);
 21c:	60 e0       	ldi	r22, 0x00	; 0
 21e:	84 e1       	ldi	r24, 0x14	; 20
 220:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC5,DIO_LOW);
 224:	60 e0       	ldi	r22, 0x00	; 0
 226:	85 e1       	ldi	r24, 0x15	; 21
 228:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC6,DIO_HIGH);
 22c:	61 e0       	ldi	r22, 0x01	; 1
 22e:	86 e1       	ldi	r24, 0x16	; 22
 230:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC7,DIO_HIGH);
 234:	61 e0       	ldi	r22, 0x01	; 1
 236:	87 e1       	ldi	r24, 0x17	; 23
 238:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				break;
 23c:	51 cf       	rjmp	.-350    	; 0xe0 <test_code+0x56>
			case 5:
				DIO_setPinValue(DIO_PINC1,DIO_HIGH);
 23e:	61 e0       	ldi	r22, 0x01	; 1
 240:	81 e1       	ldi	r24, 0x11	; 17
 242:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC2,DIO_LOW);
 246:	60 e0       	ldi	r22, 0x00	; 0
 248:	82 e1       	ldi	r24, 0x12	; 18
 24a:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC3,DIO_HIGH);
 24e:	61 e0       	ldi	r22, 0x01	; 1
 250:	83 e1       	ldi	r24, 0x13	; 19
 252:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC4,DIO_HIGH);
 256:	61 e0       	ldi	r22, 0x01	; 1
 258:	84 e1       	ldi	r24, 0x14	; 20
 25a:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC5,DIO_LOW);
 25e:	60 e0       	ldi	r22, 0x00	; 0
 260:	85 e1       	ldi	r24, 0x15	; 21
 262:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC6,DIO_HIGH);
 266:	61 e0       	ldi	r22, 0x01	; 1
 268:	86 e1       	ldi	r24, 0x16	; 22
 26a:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC7,DIO_HIGH);
 26e:	61 e0       	ldi	r22, 0x01	; 1
 270:	87 e1       	ldi	r24, 0x17	; 23
 272:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				break;
 276:	34 cf       	rjmp	.-408    	; 0xe0 <test_code+0x56>
			case 6:
				DIO_setPinValue(DIO_PINC1,DIO_HIGH);
 278:	61 e0       	ldi	r22, 0x01	; 1
 27a:	81 e1       	ldi	r24, 0x11	; 17
 27c:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC2,DIO_LOW);
 280:	60 e0       	ldi	r22, 0x00	; 0
 282:	82 e1       	ldi	r24, 0x12	; 18
 284:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC3,DIO_HIGH);
 288:	61 e0       	ldi	r22, 0x01	; 1
 28a:	83 e1       	ldi	r24, 0x13	; 19
 28c:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC4,DIO_HIGH);
 290:	61 e0       	ldi	r22, 0x01	; 1
 292:	84 e1       	ldi	r24, 0x14	; 20
 294:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC5,DIO_HIGH);
 298:	61 e0       	ldi	r22, 0x01	; 1
 29a:	85 e1       	ldi	r24, 0x15	; 21
 29c:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC6,DIO_HIGH);
 2a0:	61 e0       	ldi	r22, 0x01	; 1
 2a2:	86 e1       	ldi	r24, 0x16	; 22
 2a4:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC7,DIO_HIGH);
 2a8:	61 e0       	ldi	r22, 0x01	; 1
 2aa:	87 e1       	ldi	r24, 0x17	; 23
 2ac:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				break;
 2b0:	17 cf       	rjmp	.-466    	; 0xe0 <test_code+0x56>
			case 7:
				DIO_setPinValue(DIO_PINC1,DIO_HIGH);
 2b2:	61 e0       	ldi	r22, 0x01	; 1
 2b4:	81 e1       	ldi	r24, 0x11	; 17
 2b6:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC2,DIO_HIGH);
 2ba:	61 e0       	ldi	r22, 0x01	; 1
 2bc:	82 e1       	ldi	r24, 0x12	; 18
 2be:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC3,DIO_HIGH);
 2c2:	61 e0       	ldi	r22, 0x01	; 1
 2c4:	83 e1       	ldi	r24, 0x13	; 19
 2c6:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC4,DIO_LOW);
 2ca:	60 e0       	ldi	r22, 0x00	; 0
 2cc:	84 e1       	ldi	r24, 0x14	; 20
 2ce:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC5,DIO_LOW);
 2d2:	60 e0       	ldi	r22, 0x00	; 0
 2d4:	85 e1       	ldi	r24, 0x15	; 21
 2d6:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC6,DIO_LOW);
 2da:	60 e0       	ldi	r22, 0x00	; 0
 2dc:	86 e1       	ldi	r24, 0x16	; 22
 2de:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC7,DIO_LOW);
 2e2:	60 e0       	ldi	r22, 0x00	; 0
 2e4:	87 e1       	ldi	r24, 0x17	; 23
 2e6:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				break;
 2ea:	fa ce       	rjmp	.-524    	; 0xe0 <test_code+0x56>
			case 8:
				DIO_setPinValue(DIO_PINC1,DIO_HIGH);
 2ec:	61 e0       	ldi	r22, 0x01	; 1
 2ee:	81 e1       	ldi	r24, 0x11	; 17
 2f0:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC2,DIO_HIGH);
 2f4:	61 e0       	ldi	r22, 0x01	; 1
 2f6:	82 e1       	ldi	r24, 0x12	; 18
 2f8:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC3,DIO_HIGH);
 2fc:	61 e0       	ldi	r22, 0x01	; 1
 2fe:	83 e1       	ldi	r24, 0x13	; 19
 300:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC4,DIO_HIGH);
 304:	61 e0       	ldi	r22, 0x01	; 1
 306:	84 e1       	ldi	r24, 0x14	; 20
 308:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC5,DIO_HIGH);
 30c:	61 e0       	ldi	r22, 0x01	; 1
 30e:	85 e1       	ldi	r24, 0x15	; 21
 310:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC6,DIO_HIGH);
 314:	61 e0       	ldi	r22, 0x01	; 1
 316:	86 e1       	ldi	r24, 0x16	; 22
 318:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC7,DIO_HIGH);
 31c:	61 e0       	ldi	r22, 0x01	; 1
 31e:	87 e1       	ldi	r24, 0x17	; 23
 320:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				break;
 324:	dd ce       	rjmp	.-582    	; 0xe0 <test_code+0x56>
			case 9:
				DIO_setPinValue(DIO_PINC1,DIO_HIGH);
 326:	61 e0       	ldi	r22, 0x01	; 1
 328:	81 e1       	ldi	r24, 0x11	; 17
 32a:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC2,DIO_HIGH);
 32e:	61 e0       	ldi	r22, 0x01	; 1
 330:	82 e1       	ldi	r24, 0x12	; 18
 332:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC3,DIO_HIGH);
 336:	61 e0       	ldi	r22, 0x01	; 1
 338:	83 e1       	ldi	r24, 0x13	; 19
 33a:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC4,DIO_HIGH);
 33e:	61 e0       	ldi	r22, 0x01	; 1
 340:	84 e1       	ldi	r24, 0x14	; 20
 342:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC5,DIO_LOW);
 346:	60 e0       	ldi	r22, 0x00	; 0
 348:	85 e1       	ldi	r24, 0x15	; 21
 34a:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC6,DIO_HIGH);
 34e:	61 e0       	ldi	r22, 0x01	; 1
 350:	86 e1       	ldi	r24, 0x16	; 22
 352:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				DIO_setPinValue(DIO_PINC7,DIO_HIGH);
 356:	61 e0       	ldi	r22, 0x01	; 1
 358:	87 e1       	ldi	r24, 0x17	; 23
 35a:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
				break;
 35e:	c0 ce       	rjmp	.-640    	; 0xe0 <test_code+0x56>

00000360 <DIO_setPinDir>:

#include "DIO_INT.h"

void DIO_setPinDir(u8 pinNum, u8 dir){
	//PORTA
	if (pinNum>=0 && pinNum<=7) 
 360:	88 30       	cpi	r24, 0x08	; 8
 362:	00 f5       	brcc	.+64     	; 0x3a4 <DIO_setPinDir+0x44>
	{
		if (dir==DIO_INPUT){
 364:	61 11       	cpse	r22, r1
 366:	0e c0       	rjmp	.+28     	; 0x384 <DIO_setPinDir+0x24>
			CLEAR_BIT(DDRA,pinNum);
 368:	4a b3       	in	r20, 0x1a	; 26
 36a:	21 e0       	ldi	r18, 0x01	; 1
 36c:	30 e0       	ldi	r19, 0x00	; 0
 36e:	b9 01       	movw	r22, r18
 370:	02 c0       	rjmp	.+4      	; 0x376 <DIO_setPinDir+0x16>
 372:	66 0f       	add	r22, r22
 374:	77 1f       	adc	r23, r23
 376:	8a 95       	dec	r24
 378:	e2 f7       	brpl	.-8      	; 0x372 <DIO_setPinDir+0x12>
 37a:	cb 01       	movw	r24, r22
 37c:	80 95       	com	r24
 37e:	84 23       	and	r24, r20
 380:	8a bb       	out	0x1a, r24	; 26
 382:	08 95       	ret
		}
		else if(dir==DIO_OUTPUT){
 384:	61 30       	cpi	r22, 0x01	; 1
 386:	09 f0       	breq	.+2      	; 0x38a <DIO_setPinDir+0x2a>
 388:	75 c0       	rjmp	.+234    	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
			SET_BIT(DDRA,pinNum);
 38a:	4a b3       	in	r20, 0x1a	; 26
 38c:	21 e0       	ldi	r18, 0x01	; 1
 38e:	30 e0       	ldi	r19, 0x00	; 0
 390:	b9 01       	movw	r22, r18
 392:	02 c0       	rjmp	.+4      	; 0x398 <DIO_setPinDir+0x38>
 394:	66 0f       	add	r22, r22
 396:	77 1f       	adc	r23, r23
 398:	8a 95       	dec	r24
 39a:	e2 f7       	brpl	.-8      	; 0x394 <DIO_setPinDir+0x34>
 39c:	cb 01       	movw	r24, r22
 39e:	84 2b       	or	r24, r20
 3a0:	8a bb       	out	0x1a, r24	; 26
 3a2:	08 95       	ret
		}
	}
	else //PORTB
	if (pinNum>=8 && pinNum<=15) 
 3a4:	98 ef       	ldi	r25, 0xF8	; 248
 3a6:	98 0f       	add	r25, r24
 3a8:	98 30       	cpi	r25, 0x08	; 8
 3aa:	00 f5       	brcc	.+64     	; 0x3ec <DIO_setPinDir+0x8c>
	{
		pinNum=pinNum-8;
		if (dir==DIO_INPUT){
 3ac:	61 11       	cpse	r22, r1
 3ae:	0e c0       	rjmp	.+28     	; 0x3cc <DIO_setPinDir+0x6c>
			CLEAR_BIT(DDRB,pinNum);
 3b0:	47 b3       	in	r20, 0x17	; 23
 3b2:	21 e0       	ldi	r18, 0x01	; 1
 3b4:	30 e0       	ldi	r19, 0x00	; 0
 3b6:	b9 01       	movw	r22, r18
 3b8:	02 c0       	rjmp	.+4      	; 0x3be <DIO_setPinDir+0x5e>
 3ba:	66 0f       	add	r22, r22
 3bc:	77 1f       	adc	r23, r23
 3be:	9a 95       	dec	r25
 3c0:	e2 f7       	brpl	.-8      	; 0x3ba <DIO_setPinDir+0x5a>
 3c2:	cb 01       	movw	r24, r22
 3c4:	80 95       	com	r24
 3c6:	84 23       	and	r24, r20
 3c8:	87 bb       	out	0x17, r24	; 23
 3ca:	08 95       	ret
		}
		else if(dir==DIO_OUTPUT){
 3cc:	61 30       	cpi	r22, 0x01	; 1
 3ce:	09 f0       	breq	.+2      	; 0x3d2 <DIO_setPinDir+0x72>
 3d0:	51 c0       	rjmp	.+162    	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
			SET_BIT(DDRB,pinNum);
 3d2:	47 b3       	in	r20, 0x17	; 23
 3d4:	21 e0       	ldi	r18, 0x01	; 1
 3d6:	30 e0       	ldi	r19, 0x00	; 0
 3d8:	b9 01       	movw	r22, r18
 3da:	02 c0       	rjmp	.+4      	; 0x3e0 <DIO_setPinDir+0x80>
 3dc:	66 0f       	add	r22, r22
 3de:	77 1f       	adc	r23, r23
 3e0:	9a 95       	dec	r25
 3e2:	e2 f7       	brpl	.-8      	; 0x3dc <DIO_setPinDir+0x7c>
 3e4:	cb 01       	movw	r24, r22
 3e6:	84 2b       	or	r24, r20
 3e8:	87 bb       	out	0x17, r24	; 23
 3ea:	08 95       	ret
		}
	}
	else //PORTC
	if (pinNum>=16 && pinNum<=23) 
 3ec:	90 ef       	ldi	r25, 0xF0	; 240
 3ee:	98 0f       	add	r25, r24
 3f0:	98 30       	cpi	r25, 0x08	; 8
 3f2:	f8 f4       	brcc	.+62     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
	{
		pinNum=pinNum-16;
		if (dir==DIO_INPUT){
 3f4:	61 11       	cpse	r22, r1
 3f6:	0e c0       	rjmp	.+28     	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
			CLEAR_BIT(DDRC,pinNum);
 3f8:	44 b3       	in	r20, 0x14	; 20
 3fa:	21 e0       	ldi	r18, 0x01	; 1
 3fc:	30 e0       	ldi	r19, 0x00	; 0
 3fe:	b9 01       	movw	r22, r18
 400:	02 c0       	rjmp	.+4      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 402:	66 0f       	add	r22, r22
 404:	77 1f       	adc	r23, r23
 406:	9a 95       	dec	r25
 408:	e2 f7       	brpl	.-8      	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 40a:	cb 01       	movw	r24, r22
 40c:	80 95       	com	r24
 40e:	84 23       	and	r24, r20
 410:	84 bb       	out	0x14, r24	; 20
 412:	08 95       	ret
		}
		else if(dir==DIO_OUTPUT){
 414:	61 30       	cpi	r22, 0x01	; 1
 416:	71 f5       	brne	.+92     	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
			SET_BIT(DDRC,pinNum);
 418:	44 b3       	in	r20, 0x14	; 20
 41a:	21 e0       	ldi	r18, 0x01	; 1
 41c:	30 e0       	ldi	r19, 0x00	; 0
 41e:	b9 01       	movw	r22, r18
 420:	02 c0       	rjmp	.+4      	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 422:	66 0f       	add	r22, r22
 424:	77 1f       	adc	r23, r23
 426:	9a 95       	dec	r25
 428:	e2 f7       	brpl	.-8      	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 42a:	cb 01       	movw	r24, r22
 42c:	84 2b       	or	r24, r20
 42e:	84 bb       	out	0x14, r24	; 20
 430:	08 95       	ret
		}
	}
	else //PORTD
	if (pinNum>=24 && pinNum<=31) 
 432:	88 51       	subi	r24, 0x18	; 24
 434:	88 30       	cpi	r24, 0x08	; 8
 436:	f0 f4       	brcc	.+60     	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
	{
		pinNum=pinNum-24;
		if (dir==DIO_INPUT){
 438:	61 11       	cpse	r22, r1
 43a:	0e c0       	rjmp	.+28     	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
			CLEAR_BIT(DDRC,pinNum);
 43c:	44 b3       	in	r20, 0x14	; 20
 43e:	21 e0       	ldi	r18, 0x01	; 1
 440:	30 e0       	ldi	r19, 0x00	; 0
 442:	b9 01       	movw	r22, r18
 444:	02 c0       	rjmp	.+4      	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
 446:	66 0f       	add	r22, r22
 448:	77 1f       	adc	r23, r23
 44a:	8a 95       	dec	r24
 44c:	e2 f7       	brpl	.-8      	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
 44e:	cb 01       	movw	r24, r22
 450:	80 95       	com	r24
 452:	84 23       	and	r24, r20
 454:	84 bb       	out	0x14, r24	; 20
 456:	08 95       	ret
		}
		else if(dir==DIO_OUTPUT){
 458:	61 30       	cpi	r22, 0x01	; 1
 45a:	61 f4       	brne	.+24     	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
			SET_BIT(DDRC,pinNum);
 45c:	44 b3       	in	r20, 0x14	; 20
 45e:	21 e0       	ldi	r18, 0x01	; 1
 460:	30 e0       	ldi	r19, 0x00	; 0
 462:	b9 01       	movw	r22, r18
 464:	02 c0       	rjmp	.+4      	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
 466:	66 0f       	add	r22, r22
 468:	77 1f       	adc	r23, r23
 46a:	8a 95       	dec	r24
 46c:	e2 f7       	brpl	.-8      	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
 46e:	cb 01       	movw	r24, r22
 470:	84 2b       	or	r24, r20
 472:	84 bb       	out	0x14, r24	; 20
 474:	08 95       	ret

00000476 <DIO_setPinValue>:
	}
}

void DIO_setPinValue(u8 pinNum, u8 level){
	//PORTA
	if (pinNum>=0 && pinNum<=7) 
 476:	88 30       	cpi	r24, 0x08	; 8
 478:	00 f5       	brcc	.+64     	; 0x4ba <DIO_setPinValue+0x44>
	{
		if (level==DIO_LOW){
 47a:	61 11       	cpse	r22, r1
 47c:	0e c0       	rjmp	.+28     	; 0x49a <DIO_setPinValue+0x24>
			CLEAR_BIT(PORTA,pinNum);
 47e:	4b b3       	in	r20, 0x1b	; 27
 480:	21 e0       	ldi	r18, 0x01	; 1
 482:	30 e0       	ldi	r19, 0x00	; 0
 484:	b9 01       	movw	r22, r18
 486:	02 c0       	rjmp	.+4      	; 0x48c <DIO_setPinValue+0x16>
 488:	66 0f       	add	r22, r22
 48a:	77 1f       	adc	r23, r23
 48c:	8a 95       	dec	r24
 48e:	e2 f7       	brpl	.-8      	; 0x488 <DIO_setPinValue+0x12>
 490:	cb 01       	movw	r24, r22
 492:	80 95       	com	r24
 494:	84 23       	and	r24, r20
 496:	8b bb       	out	0x1b, r24	; 27
 498:	08 95       	ret
		}
		else if(level==DIO_HIGH){
 49a:	61 30       	cpi	r22, 0x01	; 1
 49c:	09 f0       	breq	.+2      	; 0x4a0 <DIO_setPinValue+0x2a>
 49e:	75 c0       	rjmp	.+234    	; 0x58a <DIO_setPinValue+0x114>
			SET_BIT(PORTA,pinNum);
 4a0:	4b b3       	in	r20, 0x1b	; 27
 4a2:	21 e0       	ldi	r18, 0x01	; 1
 4a4:	30 e0       	ldi	r19, 0x00	; 0
 4a6:	b9 01       	movw	r22, r18
 4a8:	02 c0       	rjmp	.+4      	; 0x4ae <DIO_setPinValue+0x38>
 4aa:	66 0f       	add	r22, r22
 4ac:	77 1f       	adc	r23, r23
 4ae:	8a 95       	dec	r24
 4b0:	e2 f7       	brpl	.-8      	; 0x4aa <DIO_setPinValue+0x34>
 4b2:	cb 01       	movw	r24, r22
 4b4:	84 2b       	or	r24, r20
 4b6:	8b bb       	out	0x1b, r24	; 27
 4b8:	08 95       	ret
		}
	}
	else //PORTB
	if (pinNum>=8 && pinNum<=15) 
 4ba:	98 ef       	ldi	r25, 0xF8	; 248
 4bc:	98 0f       	add	r25, r24
 4be:	98 30       	cpi	r25, 0x08	; 8
 4c0:	00 f5       	brcc	.+64     	; 0x502 <DIO_setPinValue+0x8c>
	{
		pinNum=pinNum-8;
		if (level==DIO_LOW){
 4c2:	61 11       	cpse	r22, r1
 4c4:	0e c0       	rjmp	.+28     	; 0x4e2 <DIO_setPinValue+0x6c>
			CLEAR_BIT(PORTB,pinNum);
 4c6:	48 b3       	in	r20, 0x18	; 24
 4c8:	21 e0       	ldi	r18, 0x01	; 1
 4ca:	30 e0       	ldi	r19, 0x00	; 0
 4cc:	b9 01       	movw	r22, r18
 4ce:	02 c0       	rjmp	.+4      	; 0x4d4 <DIO_setPinValue+0x5e>
 4d0:	66 0f       	add	r22, r22
 4d2:	77 1f       	adc	r23, r23
 4d4:	9a 95       	dec	r25
 4d6:	e2 f7       	brpl	.-8      	; 0x4d0 <DIO_setPinValue+0x5a>
 4d8:	cb 01       	movw	r24, r22
 4da:	80 95       	com	r24
 4dc:	84 23       	and	r24, r20
 4de:	88 bb       	out	0x18, r24	; 24
 4e0:	08 95       	ret
		}
		else if(level==DIO_HIGH){
 4e2:	61 30       	cpi	r22, 0x01	; 1
 4e4:	09 f0       	breq	.+2      	; 0x4e8 <DIO_setPinValue+0x72>
 4e6:	51 c0       	rjmp	.+162    	; 0x58a <DIO_setPinValue+0x114>
			SET_BIT(PORTB,pinNum);
 4e8:	48 b3       	in	r20, 0x18	; 24
 4ea:	21 e0       	ldi	r18, 0x01	; 1
 4ec:	30 e0       	ldi	r19, 0x00	; 0
 4ee:	b9 01       	movw	r22, r18
 4f0:	02 c0       	rjmp	.+4      	; 0x4f6 <DIO_setPinValue+0x80>
 4f2:	66 0f       	add	r22, r22
 4f4:	77 1f       	adc	r23, r23
 4f6:	9a 95       	dec	r25
 4f8:	e2 f7       	brpl	.-8      	; 0x4f2 <DIO_setPinValue+0x7c>
 4fa:	cb 01       	movw	r24, r22
 4fc:	84 2b       	or	r24, r20
 4fe:	88 bb       	out	0x18, r24	; 24
 500:	08 95       	ret
		}
	}
	else //PORTC
	if (pinNum>=16 && pinNum<=23) 
 502:	90 ef       	ldi	r25, 0xF0	; 240
 504:	98 0f       	add	r25, r24
 506:	98 30       	cpi	r25, 0x08	; 8
 508:	f8 f4       	brcc	.+62     	; 0x548 <DIO_setPinValue+0xd2>
	{
		pinNum=pinNum-16;
		if (level==DIO_LOW){
 50a:	61 11       	cpse	r22, r1
 50c:	0e c0       	rjmp	.+28     	; 0x52a <DIO_setPinValue+0xb4>
			CLEAR_BIT(PORTC,pinNum);
 50e:	45 b3       	in	r20, 0x15	; 21
 510:	21 e0       	ldi	r18, 0x01	; 1
 512:	30 e0       	ldi	r19, 0x00	; 0
 514:	b9 01       	movw	r22, r18
 516:	02 c0       	rjmp	.+4      	; 0x51c <DIO_setPinValue+0xa6>
 518:	66 0f       	add	r22, r22
 51a:	77 1f       	adc	r23, r23
 51c:	9a 95       	dec	r25
 51e:	e2 f7       	brpl	.-8      	; 0x518 <DIO_setPinValue+0xa2>
 520:	cb 01       	movw	r24, r22
 522:	80 95       	com	r24
 524:	84 23       	and	r24, r20
 526:	85 bb       	out	0x15, r24	; 21
 528:	08 95       	ret
		}
		else if(level==DIO_HIGH){
 52a:	61 30       	cpi	r22, 0x01	; 1
 52c:	71 f5       	brne	.+92     	; 0x58a <DIO_setPinValue+0x114>
			SET_BIT(PORTC,pinNum);
 52e:	45 b3       	in	r20, 0x15	; 21
 530:	21 e0       	ldi	r18, 0x01	; 1
 532:	30 e0       	ldi	r19, 0x00	; 0
 534:	b9 01       	movw	r22, r18
 536:	02 c0       	rjmp	.+4      	; 0x53c <DIO_setPinValue+0xc6>
 538:	66 0f       	add	r22, r22
 53a:	77 1f       	adc	r23, r23
 53c:	9a 95       	dec	r25
 53e:	e2 f7       	brpl	.-8      	; 0x538 <DIO_setPinValue+0xc2>
 540:	cb 01       	movw	r24, r22
 542:	84 2b       	or	r24, r20
 544:	85 bb       	out	0x15, r24	; 21
 546:	08 95       	ret
		}
	}
	else //PORTD
	if (pinNum>=24 && pinNum<=31) 
 548:	88 51       	subi	r24, 0x18	; 24
 54a:	88 30       	cpi	r24, 0x08	; 8
 54c:	f0 f4       	brcc	.+60     	; 0x58a <DIO_setPinValue+0x114>
	{
		pinNum=pinNum-24;
		if (level==DIO_LOW){
 54e:	61 11       	cpse	r22, r1
 550:	0e c0       	rjmp	.+28     	; 0x56e <DIO_setPinValue+0xf8>
			CLEAR_BIT(PORTD,pinNum);
 552:	42 b3       	in	r20, 0x12	; 18
 554:	21 e0       	ldi	r18, 0x01	; 1
 556:	30 e0       	ldi	r19, 0x00	; 0
 558:	b9 01       	movw	r22, r18
 55a:	02 c0       	rjmp	.+4      	; 0x560 <DIO_setPinValue+0xea>
 55c:	66 0f       	add	r22, r22
 55e:	77 1f       	adc	r23, r23
 560:	8a 95       	dec	r24
 562:	e2 f7       	brpl	.-8      	; 0x55c <DIO_setPinValue+0xe6>
 564:	cb 01       	movw	r24, r22
 566:	80 95       	com	r24
 568:	84 23       	and	r24, r20
 56a:	82 bb       	out	0x12, r24	; 18
 56c:	08 95       	ret
		}
		else if(level==DIO_HIGH){
 56e:	61 30       	cpi	r22, 0x01	; 1
 570:	61 f4       	brne	.+24     	; 0x58a <DIO_setPinValue+0x114>
			SET_BIT(PORTD,pinNum);
 572:	42 b3       	in	r20, 0x12	; 18
 574:	21 e0       	ldi	r18, 0x01	; 1
 576:	30 e0       	ldi	r19, 0x00	; 0
 578:	b9 01       	movw	r22, r18
 57a:	02 c0       	rjmp	.+4      	; 0x580 <DIO_setPinValue+0x10a>
 57c:	66 0f       	add	r22, r22
 57e:	77 1f       	adc	r23, r23
 580:	8a 95       	dec	r24
 582:	e2 f7       	brpl	.-8      	; 0x57c <DIO_setPinValue+0x106>
 584:	cb 01       	movw	r24, r22
 586:	84 2b       	or	r24, r20
 588:	82 bb       	out	0x12, r24	; 18
 58a:	08 95       	ret

0000058c <DIO_readPinValue>:
	}
}

u8 DIO_readPinValue(u8 pinNum){
	//PORTA
	if (pinNum>=0 && pinNum<=7)
 58c:	88 30       	cpi	r24, 0x08	; 8
 58e:	58 f4       	brcc	.+22     	; 0x5a6 <DIO_readPinValue+0x1a>
	{
		return GET_BIT(PINA,pinNum);
 590:	29 b3       	in	r18, 0x19	; 25
 592:	30 e0       	ldi	r19, 0x00	; 0
 594:	a9 01       	movw	r20, r18
 596:	02 c0       	rjmp	.+4      	; 0x59c <DIO_readPinValue+0x10>
 598:	55 95       	asr	r21
 59a:	47 95       	ror	r20
 59c:	8a 95       	dec	r24
 59e:	e2 f7       	brpl	.-8      	; 0x598 <DIO_readPinValue+0xc>
 5a0:	ca 01       	movw	r24, r20
 5a2:	81 70       	andi	r24, 0x01	; 1
 5a4:	08 95       	ret
	}
	else //PORTB
	if (pinNum>=8 && pinNum<=15)
 5a6:	28 ef       	ldi	r18, 0xF8	; 248
 5a8:	28 0f       	add	r18, r24
 5aa:	28 30       	cpi	r18, 0x08	; 8
 5ac:	48 f4       	brcc	.+18     	; 0x5c0 <DIO_readPinValue+0x34>
	{
		pinNum=pinNum-8;
		return GET_BIT(PINB,pinNum);
 5ae:	86 b3       	in	r24, 0x16	; 22
 5b0:	90 e0       	ldi	r25, 0x00	; 0
 5b2:	02 c0       	rjmp	.+4      	; 0x5b8 <DIO_readPinValue+0x2c>
 5b4:	95 95       	asr	r25
 5b6:	87 95       	ror	r24
 5b8:	2a 95       	dec	r18
 5ba:	e2 f7       	brpl	.-8      	; 0x5b4 <DIO_readPinValue+0x28>
 5bc:	81 70       	andi	r24, 0x01	; 1
 5be:	08 95       	ret
	}
	else //PORTC
	if (pinNum>=16 && pinNum<=23)
 5c0:	20 ef       	ldi	r18, 0xF0	; 240
 5c2:	28 0f       	add	r18, r24
 5c4:	28 30       	cpi	r18, 0x08	; 8
 5c6:	48 f4       	brcc	.+18     	; 0x5da <DIO_readPinValue+0x4e>
	{
		pinNum=pinNum-16;
		return GET_BIT(PINC,pinNum);
 5c8:	83 b3       	in	r24, 0x13	; 19
 5ca:	90 e0       	ldi	r25, 0x00	; 0
 5cc:	02 c0       	rjmp	.+4      	; 0x5d2 <DIO_readPinValue+0x46>
 5ce:	95 95       	asr	r25
 5d0:	87 95       	ror	r24
 5d2:	2a 95       	dec	r18
 5d4:	e2 f7       	brpl	.-8      	; 0x5ce <DIO_readPinValue+0x42>
 5d6:	81 70       	andi	r24, 0x01	; 1
 5d8:	08 95       	ret
	}
	else //PORTD
	if (pinNum>=24 && pinNum<=31)
 5da:	28 ee       	ldi	r18, 0xE8	; 232
 5dc:	28 0f       	add	r18, r24
 5de:	28 30       	cpi	r18, 0x08	; 8
 5e0:	50 f4       	brcc	.+20     	; 0x5f6 <DIO_readPinValue+0x6a>
	{
		pinNum=pinNum-24;
		return GET_BIT(PIND,pinNum);
 5e2:	90 b3       	in	r25, 0x10	; 16
 5e4:	89 2f       	mov	r24, r25
 5e6:	90 e0       	ldi	r25, 0x00	; 0
 5e8:	02 c0       	rjmp	.+4      	; 0x5ee <DIO_readPinValue+0x62>
 5ea:	95 95       	asr	r25
 5ec:	87 95       	ror	r24
 5ee:	2a 95       	dec	r18
 5f0:	e2 f7       	brpl	.-8      	; 0x5ea <DIO_readPinValue+0x5e>
 5f2:	81 70       	andi	r24, 0x01	; 1
 5f4:	08 95       	ret
	}
}
 5f6:	08 95       	ret

000005f8 <DIO_setPullUp>:

void DIO_setPullUp(u8 pinNum){
	DIO_setPinValue(pinNum,DIO_HIGH);
 5f8:	61 e0       	ldi	r22, 0x01	; 1
 5fa:	0e 94 3b 02 	call	0x476	; 0x476 <DIO_setPinValue>
 5fe:	08 95       	ret

00000600 <__tablejump2__>:
 600:	ee 0f       	add	r30, r30
 602:	ff 1f       	adc	r31, r31
 604:	05 90       	lpm	r0, Z+
 606:	f4 91       	lpm	r31, Z
 608:	e0 2d       	mov	r30, r0
 60a:	09 94       	ijmp

0000060c <_exit>:
 60c:	f8 94       	cli

0000060e <__stop_program>:
 60e:	ff cf       	rjmp	.-2      	; 0x60e <__stop_program>
