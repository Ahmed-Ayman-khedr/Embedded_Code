
code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000034c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000003a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000003a0  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000003d0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000080  00000000  00000000  0000040c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000882  00000000  00000000  0000048c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006e4  00000000  00000000  00000d0e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000047b  00000000  00000000  000013f2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000b4  00000000  00000000  00001870  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003ea  00000000  00000000  00001924  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003f3  00000000  00000000  00001d0e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00002101  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 a4 01 	jmp	0x348	; 0x348 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include "BIT_MATH.h"

#include "Sess18/ASG2/ASS_INT.h"

int main(){
	source_code();
  6c:	0e 94 3b 00 	call	0x76	; 0x76 <source_code>
	return 0;
  70:	80 e0       	ldi	r24, 0x00	; 0
  72:	90 e0       	ldi	r25, 0x00	; 0
  74:	08 95       	ret

00000076 <source_code>:
#include "Sess16/ASG1/ASS_INT.h"

int source_code()
{
	//LED
	DIO_setPinDir(DIO_PINC2,DIO_OUTPUT);	
  76:	61 e0       	ldi	r22, 0x01	; 1
  78:	82 e1       	ldi	r24, 0x12	; 18
  7a:	0e 94 4c 00 	call	0x98	; 0x98 <DIO_setPinDir>
	while (1)
	{
		DIO_togglePinValue(DIO_PINC2);
  7e:	82 e1       	ldi	r24, 0x12	; 18
  80:	0e 94 98 01 	call	0x330	; 0x330 <DIO_togglePinValue>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  84:	2f ef       	ldi	r18, 0xFF	; 255
  86:	81 ee       	ldi	r24, 0xE1	; 225
  88:	94 e0       	ldi	r25, 0x04	; 4
  8a:	21 50       	subi	r18, 0x01	; 1
  8c:	80 40       	sbci	r24, 0x00	; 0
  8e:	90 40       	sbci	r25, 0x00	; 0
  90:	e1 f7       	brne	.-8      	; 0x8a <source_code+0x14>
  92:	00 c0       	rjmp	.+0      	; 0x94 <source_code+0x1e>
  94:	00 00       	nop
  96:	f3 cf       	rjmp	.-26     	; 0x7e <source_code+0x8>

00000098 <DIO_setPinDir>:
		return GET_BIT(PIND,pinNum);
	}
}

void DIO_setPullUp(u8 pinNum){
	DIO_setPinValue(pinNum,DIO_HIGH);
  98:	88 30       	cpi	r24, 0x08	; 8
  9a:	00 f5       	brcc	.+64     	; 0xdc <DIO_setPinDir+0x44>
  9c:	61 11       	cpse	r22, r1
  9e:	0e c0       	rjmp	.+28     	; 0xbc <DIO_setPinDir+0x24>
  a0:	4a b3       	in	r20, 0x1a	; 26
  a2:	21 e0       	ldi	r18, 0x01	; 1
  a4:	30 e0       	ldi	r19, 0x00	; 0
  a6:	b9 01       	movw	r22, r18
  a8:	02 c0       	rjmp	.+4      	; 0xae <DIO_setPinDir+0x16>
  aa:	66 0f       	add	r22, r22
  ac:	77 1f       	adc	r23, r23
  ae:	8a 95       	dec	r24
  b0:	e2 f7       	brpl	.-8      	; 0xaa <DIO_setPinDir+0x12>
  b2:	cb 01       	movw	r24, r22
  b4:	80 95       	com	r24
  b6:	84 23       	and	r24, r20
  b8:	8a bb       	out	0x1a, r24	; 26
  ba:	08 95       	ret
  bc:	61 30       	cpi	r22, 0x01	; 1
  be:	09 f0       	breq	.+2      	; 0xc2 <DIO_setPinDir+0x2a>
  c0:	75 c0       	rjmp	.+234    	; 0x1ac <DIO_setPinDir+0x114>
  c2:	4a b3       	in	r20, 0x1a	; 26
  c4:	21 e0       	ldi	r18, 0x01	; 1
  c6:	30 e0       	ldi	r19, 0x00	; 0
  c8:	b9 01       	movw	r22, r18
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <DIO_setPinDir+0x38>
  cc:	66 0f       	add	r22, r22
  ce:	77 1f       	adc	r23, r23
  d0:	8a 95       	dec	r24
  d2:	e2 f7       	brpl	.-8      	; 0xcc <DIO_setPinDir+0x34>
  d4:	cb 01       	movw	r24, r22
  d6:	84 2b       	or	r24, r20
  d8:	8a bb       	out	0x1a, r24	; 26
  da:	08 95       	ret
  dc:	98 ef       	ldi	r25, 0xF8	; 248
  de:	98 0f       	add	r25, r24
  e0:	98 30       	cpi	r25, 0x08	; 8
  e2:	00 f5       	brcc	.+64     	; 0x124 <DIO_setPinDir+0x8c>
  e4:	61 11       	cpse	r22, r1
  e6:	0e c0       	rjmp	.+28     	; 0x104 <DIO_setPinDir+0x6c>
  e8:	47 b3       	in	r20, 0x17	; 23
  ea:	21 e0       	ldi	r18, 0x01	; 1
  ec:	30 e0       	ldi	r19, 0x00	; 0
  ee:	b9 01       	movw	r22, r18
  f0:	02 c0       	rjmp	.+4      	; 0xf6 <DIO_setPinDir+0x5e>
  f2:	66 0f       	add	r22, r22
  f4:	77 1f       	adc	r23, r23
  f6:	9a 95       	dec	r25
  f8:	e2 f7       	brpl	.-8      	; 0xf2 <DIO_setPinDir+0x5a>
  fa:	cb 01       	movw	r24, r22
  fc:	80 95       	com	r24
  fe:	84 23       	and	r24, r20
 100:	87 bb       	out	0x17, r24	; 23
 102:	08 95       	ret
 104:	61 30       	cpi	r22, 0x01	; 1
 106:	09 f0       	breq	.+2      	; 0x10a <DIO_setPinDir+0x72>
 108:	51 c0       	rjmp	.+162    	; 0x1ac <DIO_setPinDir+0x114>
 10a:	47 b3       	in	r20, 0x17	; 23
 10c:	21 e0       	ldi	r18, 0x01	; 1
 10e:	30 e0       	ldi	r19, 0x00	; 0
 110:	b9 01       	movw	r22, r18
 112:	02 c0       	rjmp	.+4      	; 0x118 <DIO_setPinDir+0x80>
 114:	66 0f       	add	r22, r22
 116:	77 1f       	adc	r23, r23
 118:	9a 95       	dec	r25
 11a:	e2 f7       	brpl	.-8      	; 0x114 <DIO_setPinDir+0x7c>
 11c:	cb 01       	movw	r24, r22
 11e:	84 2b       	or	r24, r20
 120:	87 bb       	out	0x17, r24	; 23
 122:	08 95       	ret
 124:	90 ef       	ldi	r25, 0xF0	; 240
 126:	98 0f       	add	r25, r24
 128:	98 30       	cpi	r25, 0x08	; 8
 12a:	f8 f4       	brcc	.+62     	; 0x16a <DIO_setPinDir+0xd2>
 12c:	61 11       	cpse	r22, r1
 12e:	0e c0       	rjmp	.+28     	; 0x14c <DIO_setPinDir+0xb4>
 130:	44 b3       	in	r20, 0x14	; 20
 132:	21 e0       	ldi	r18, 0x01	; 1
 134:	30 e0       	ldi	r19, 0x00	; 0
 136:	b9 01       	movw	r22, r18
 138:	02 c0       	rjmp	.+4      	; 0x13e <DIO_setPinDir+0xa6>
 13a:	66 0f       	add	r22, r22
 13c:	77 1f       	adc	r23, r23
 13e:	9a 95       	dec	r25
 140:	e2 f7       	brpl	.-8      	; 0x13a <DIO_setPinDir+0xa2>
 142:	cb 01       	movw	r24, r22
 144:	80 95       	com	r24
 146:	84 23       	and	r24, r20
 148:	84 bb       	out	0x14, r24	; 20
 14a:	08 95       	ret
 14c:	61 30       	cpi	r22, 0x01	; 1
 14e:	71 f5       	brne	.+92     	; 0x1ac <DIO_setPinDir+0x114>
 150:	44 b3       	in	r20, 0x14	; 20
 152:	21 e0       	ldi	r18, 0x01	; 1
 154:	30 e0       	ldi	r19, 0x00	; 0
 156:	b9 01       	movw	r22, r18
 158:	02 c0       	rjmp	.+4      	; 0x15e <DIO_setPinDir+0xc6>
 15a:	66 0f       	add	r22, r22
 15c:	77 1f       	adc	r23, r23
 15e:	9a 95       	dec	r25
 160:	e2 f7       	brpl	.-8      	; 0x15a <DIO_setPinDir+0xc2>
 162:	cb 01       	movw	r24, r22
 164:	84 2b       	or	r24, r20
 166:	84 bb       	out	0x14, r24	; 20
 168:	08 95       	ret
 16a:	88 51       	subi	r24, 0x18	; 24
 16c:	88 30       	cpi	r24, 0x08	; 8
 16e:	f0 f4       	brcc	.+60     	; 0x1ac <DIO_setPinDir+0x114>
 170:	61 11       	cpse	r22, r1
 172:	0e c0       	rjmp	.+28     	; 0x190 <DIO_setPinDir+0xf8>
 174:	44 b3       	in	r20, 0x14	; 20
 176:	21 e0       	ldi	r18, 0x01	; 1
 178:	30 e0       	ldi	r19, 0x00	; 0
 17a:	b9 01       	movw	r22, r18
 17c:	02 c0       	rjmp	.+4      	; 0x182 <DIO_setPinDir+0xea>
 17e:	66 0f       	add	r22, r22
 180:	77 1f       	adc	r23, r23
 182:	8a 95       	dec	r24
 184:	e2 f7       	brpl	.-8      	; 0x17e <DIO_setPinDir+0xe6>
 186:	cb 01       	movw	r24, r22
 188:	80 95       	com	r24
 18a:	84 23       	and	r24, r20
 18c:	84 bb       	out	0x14, r24	; 20
 18e:	08 95       	ret
 190:	61 30       	cpi	r22, 0x01	; 1
 192:	61 f4       	brne	.+24     	; 0x1ac <DIO_setPinDir+0x114>
 194:	44 b3       	in	r20, 0x14	; 20
 196:	21 e0       	ldi	r18, 0x01	; 1
 198:	30 e0       	ldi	r19, 0x00	; 0
 19a:	b9 01       	movw	r22, r18
 19c:	02 c0       	rjmp	.+4      	; 0x1a2 <DIO_setPinDir+0x10a>
 19e:	66 0f       	add	r22, r22
 1a0:	77 1f       	adc	r23, r23
 1a2:	8a 95       	dec	r24
 1a4:	e2 f7       	brpl	.-8      	; 0x19e <DIO_setPinDir+0x106>
 1a6:	cb 01       	movw	r24, r22
 1a8:	84 2b       	or	r24, r20
 1aa:	84 bb       	out	0x14, r24	; 20
 1ac:	08 95       	ret

000001ae <DIO_setPinValue>:
 1ae:	88 30       	cpi	r24, 0x08	; 8
 1b0:	00 f5       	brcc	.+64     	; 0x1f2 <DIO_setPinValue+0x44>
 1b2:	61 11       	cpse	r22, r1
 1b4:	0e c0       	rjmp	.+28     	; 0x1d2 <DIO_setPinValue+0x24>
 1b6:	4b b3       	in	r20, 0x1b	; 27
 1b8:	21 e0       	ldi	r18, 0x01	; 1
 1ba:	30 e0       	ldi	r19, 0x00	; 0
 1bc:	b9 01       	movw	r22, r18
 1be:	02 c0       	rjmp	.+4      	; 0x1c4 <DIO_setPinValue+0x16>
 1c0:	66 0f       	add	r22, r22
 1c2:	77 1f       	adc	r23, r23
 1c4:	8a 95       	dec	r24
 1c6:	e2 f7       	brpl	.-8      	; 0x1c0 <DIO_setPinValue+0x12>
 1c8:	cb 01       	movw	r24, r22
 1ca:	80 95       	com	r24
 1cc:	84 23       	and	r24, r20
 1ce:	8b bb       	out	0x1b, r24	; 27
 1d0:	08 95       	ret
 1d2:	61 30       	cpi	r22, 0x01	; 1
 1d4:	09 f0       	breq	.+2      	; 0x1d8 <DIO_setPinValue+0x2a>
 1d6:	75 c0       	rjmp	.+234    	; 0x2c2 <DIO_setPinValue+0x114>
 1d8:	4b b3       	in	r20, 0x1b	; 27
 1da:	21 e0       	ldi	r18, 0x01	; 1
 1dc:	30 e0       	ldi	r19, 0x00	; 0
 1de:	b9 01       	movw	r22, r18
 1e0:	02 c0       	rjmp	.+4      	; 0x1e6 <DIO_setPinValue+0x38>
 1e2:	66 0f       	add	r22, r22
 1e4:	77 1f       	adc	r23, r23
 1e6:	8a 95       	dec	r24
 1e8:	e2 f7       	brpl	.-8      	; 0x1e2 <DIO_setPinValue+0x34>
 1ea:	cb 01       	movw	r24, r22
 1ec:	84 2b       	or	r24, r20
 1ee:	8b bb       	out	0x1b, r24	; 27
 1f0:	08 95       	ret
 1f2:	98 ef       	ldi	r25, 0xF8	; 248
 1f4:	98 0f       	add	r25, r24
 1f6:	98 30       	cpi	r25, 0x08	; 8
 1f8:	00 f5       	brcc	.+64     	; 0x23a <DIO_setPinValue+0x8c>
 1fa:	61 11       	cpse	r22, r1
 1fc:	0e c0       	rjmp	.+28     	; 0x21a <DIO_setPinValue+0x6c>
 1fe:	48 b3       	in	r20, 0x18	; 24
 200:	21 e0       	ldi	r18, 0x01	; 1
 202:	30 e0       	ldi	r19, 0x00	; 0
 204:	b9 01       	movw	r22, r18
 206:	02 c0       	rjmp	.+4      	; 0x20c <DIO_setPinValue+0x5e>
 208:	66 0f       	add	r22, r22
 20a:	77 1f       	adc	r23, r23
 20c:	9a 95       	dec	r25
 20e:	e2 f7       	brpl	.-8      	; 0x208 <DIO_setPinValue+0x5a>
 210:	cb 01       	movw	r24, r22
 212:	80 95       	com	r24
 214:	84 23       	and	r24, r20
 216:	88 bb       	out	0x18, r24	; 24
 218:	08 95       	ret
 21a:	61 30       	cpi	r22, 0x01	; 1
 21c:	09 f0       	breq	.+2      	; 0x220 <DIO_setPinValue+0x72>
 21e:	51 c0       	rjmp	.+162    	; 0x2c2 <DIO_setPinValue+0x114>
 220:	48 b3       	in	r20, 0x18	; 24
 222:	21 e0       	ldi	r18, 0x01	; 1
 224:	30 e0       	ldi	r19, 0x00	; 0
 226:	b9 01       	movw	r22, r18
 228:	02 c0       	rjmp	.+4      	; 0x22e <DIO_setPinValue+0x80>
 22a:	66 0f       	add	r22, r22
 22c:	77 1f       	adc	r23, r23
 22e:	9a 95       	dec	r25
 230:	e2 f7       	brpl	.-8      	; 0x22a <DIO_setPinValue+0x7c>
 232:	cb 01       	movw	r24, r22
 234:	84 2b       	or	r24, r20
 236:	88 bb       	out	0x18, r24	; 24
 238:	08 95       	ret
 23a:	90 ef       	ldi	r25, 0xF0	; 240
 23c:	98 0f       	add	r25, r24
 23e:	98 30       	cpi	r25, 0x08	; 8
 240:	f8 f4       	brcc	.+62     	; 0x280 <DIO_setPinValue+0xd2>
 242:	61 11       	cpse	r22, r1
 244:	0e c0       	rjmp	.+28     	; 0x262 <DIO_setPinValue+0xb4>
 246:	45 b3       	in	r20, 0x15	; 21
 248:	21 e0       	ldi	r18, 0x01	; 1
 24a:	30 e0       	ldi	r19, 0x00	; 0
 24c:	b9 01       	movw	r22, r18
 24e:	02 c0       	rjmp	.+4      	; 0x254 <DIO_setPinValue+0xa6>
 250:	66 0f       	add	r22, r22
 252:	77 1f       	adc	r23, r23
 254:	9a 95       	dec	r25
 256:	e2 f7       	brpl	.-8      	; 0x250 <DIO_setPinValue+0xa2>
 258:	cb 01       	movw	r24, r22
 25a:	80 95       	com	r24
 25c:	84 23       	and	r24, r20
 25e:	85 bb       	out	0x15, r24	; 21
 260:	08 95       	ret
 262:	61 30       	cpi	r22, 0x01	; 1
 264:	71 f5       	brne	.+92     	; 0x2c2 <DIO_setPinValue+0x114>
 266:	45 b3       	in	r20, 0x15	; 21
 268:	21 e0       	ldi	r18, 0x01	; 1
 26a:	30 e0       	ldi	r19, 0x00	; 0
 26c:	b9 01       	movw	r22, r18
 26e:	02 c0       	rjmp	.+4      	; 0x274 <DIO_setPinValue+0xc6>
 270:	66 0f       	add	r22, r22
 272:	77 1f       	adc	r23, r23
 274:	9a 95       	dec	r25
 276:	e2 f7       	brpl	.-8      	; 0x270 <DIO_setPinValue+0xc2>
 278:	cb 01       	movw	r24, r22
 27a:	84 2b       	or	r24, r20
 27c:	85 bb       	out	0x15, r24	; 21
 27e:	08 95       	ret
 280:	88 51       	subi	r24, 0x18	; 24
 282:	88 30       	cpi	r24, 0x08	; 8
 284:	f0 f4       	brcc	.+60     	; 0x2c2 <DIO_setPinValue+0x114>
 286:	61 11       	cpse	r22, r1
 288:	0e c0       	rjmp	.+28     	; 0x2a6 <DIO_setPinValue+0xf8>
 28a:	42 b3       	in	r20, 0x12	; 18
 28c:	21 e0       	ldi	r18, 0x01	; 1
 28e:	30 e0       	ldi	r19, 0x00	; 0
 290:	b9 01       	movw	r22, r18
 292:	02 c0       	rjmp	.+4      	; 0x298 <DIO_setPinValue+0xea>
 294:	66 0f       	add	r22, r22
 296:	77 1f       	adc	r23, r23
 298:	8a 95       	dec	r24
 29a:	e2 f7       	brpl	.-8      	; 0x294 <DIO_setPinValue+0xe6>
 29c:	cb 01       	movw	r24, r22
 29e:	80 95       	com	r24
 2a0:	84 23       	and	r24, r20
 2a2:	82 bb       	out	0x12, r24	; 18
 2a4:	08 95       	ret
 2a6:	61 30       	cpi	r22, 0x01	; 1
 2a8:	61 f4       	brne	.+24     	; 0x2c2 <DIO_setPinValue+0x114>
 2aa:	42 b3       	in	r20, 0x12	; 18
 2ac:	21 e0       	ldi	r18, 0x01	; 1
 2ae:	30 e0       	ldi	r19, 0x00	; 0
 2b0:	b9 01       	movw	r22, r18
 2b2:	02 c0       	rjmp	.+4      	; 0x2b8 <DIO_setPinValue+0x10a>
 2b4:	66 0f       	add	r22, r22
 2b6:	77 1f       	adc	r23, r23
 2b8:	8a 95       	dec	r24
 2ba:	e2 f7       	brpl	.-8      	; 0x2b4 <DIO_setPinValue+0x106>
 2bc:	cb 01       	movw	r24, r22
 2be:	84 2b       	or	r24, r20
 2c0:	82 bb       	out	0x12, r24	; 18
 2c2:	08 95       	ret

000002c4 <DIO_readPinValue>:
 2c4:	88 30       	cpi	r24, 0x08	; 8
 2c6:	58 f4       	brcc	.+22     	; 0x2de <DIO_readPinValue+0x1a>
 2c8:	29 b3       	in	r18, 0x19	; 25
 2ca:	30 e0       	ldi	r19, 0x00	; 0
 2cc:	a9 01       	movw	r20, r18
 2ce:	02 c0       	rjmp	.+4      	; 0x2d4 <DIO_readPinValue+0x10>
 2d0:	55 95       	asr	r21
 2d2:	47 95       	ror	r20
 2d4:	8a 95       	dec	r24
 2d6:	e2 f7       	brpl	.-8      	; 0x2d0 <DIO_readPinValue+0xc>
 2d8:	ca 01       	movw	r24, r20
 2da:	81 70       	andi	r24, 0x01	; 1
 2dc:	08 95       	ret
 2de:	28 ef       	ldi	r18, 0xF8	; 248
 2e0:	28 0f       	add	r18, r24
 2e2:	28 30       	cpi	r18, 0x08	; 8
 2e4:	48 f4       	brcc	.+18     	; 0x2f8 <DIO_readPinValue+0x34>
 2e6:	86 b3       	in	r24, 0x16	; 22
 2e8:	90 e0       	ldi	r25, 0x00	; 0
 2ea:	02 c0       	rjmp	.+4      	; 0x2f0 <DIO_readPinValue+0x2c>
 2ec:	95 95       	asr	r25
 2ee:	87 95       	ror	r24
 2f0:	2a 95       	dec	r18
 2f2:	e2 f7       	brpl	.-8      	; 0x2ec <DIO_readPinValue+0x28>
 2f4:	81 70       	andi	r24, 0x01	; 1
 2f6:	08 95       	ret
 2f8:	20 ef       	ldi	r18, 0xF0	; 240
 2fa:	28 0f       	add	r18, r24
 2fc:	28 30       	cpi	r18, 0x08	; 8
 2fe:	48 f4       	brcc	.+18     	; 0x312 <DIO_readPinValue+0x4e>
 300:	83 b3       	in	r24, 0x13	; 19
 302:	90 e0       	ldi	r25, 0x00	; 0
 304:	02 c0       	rjmp	.+4      	; 0x30a <DIO_readPinValue+0x46>
 306:	95 95       	asr	r25
 308:	87 95       	ror	r24
 30a:	2a 95       	dec	r18
 30c:	e2 f7       	brpl	.-8      	; 0x306 <DIO_readPinValue+0x42>
 30e:	81 70       	andi	r24, 0x01	; 1
 310:	08 95       	ret
 312:	28 ee       	ldi	r18, 0xE8	; 232
 314:	28 0f       	add	r18, r24
 316:	28 30       	cpi	r18, 0x08	; 8
 318:	50 f4       	brcc	.+20     	; 0x32e <DIO_readPinValue+0x6a>
 31a:	90 b3       	in	r25, 0x10	; 16
 31c:	89 2f       	mov	r24, r25
 31e:	90 e0       	ldi	r25, 0x00	; 0
 320:	02 c0       	rjmp	.+4      	; 0x326 <DIO_readPinValue+0x62>
 322:	95 95       	asr	r25
 324:	87 95       	ror	r24
 326:	2a 95       	dec	r18
 328:	e2 f7       	brpl	.-8      	; 0x322 <DIO_readPinValue+0x5e>
 32a:	81 70       	andi	r24, 0x01	; 1
 32c:	08 95       	ret
 32e:	08 95       	ret

00000330 <DIO_togglePinValue>:
}

void DIO_togglePinValue(u8 pinNum){
 330:	cf 93       	push	r28
 332:	c8 2f       	mov	r28, r24
	DIO_setPinValue(pinNum,!DIO_readPinValue(pinNum));
 334:	0e 94 62 01 	call	0x2c4	; 0x2c4 <DIO_readPinValue>
 338:	61 e0       	ldi	r22, 0x01	; 1
 33a:	81 11       	cpse	r24, r1
 33c:	60 e0       	ldi	r22, 0x00	; 0
 33e:	8c 2f       	mov	r24, r28
 340:	0e 94 d7 00 	call	0x1ae	; 0x1ae <DIO_setPinValue>
}
 344:	cf 91       	pop	r28
 346:	08 95       	ret

00000348 <_exit>:
 348:	f8 94       	cli

0000034a <__stop_program>:
 34a:	ff cf       	rjmp	.-2      	; 0x34a <__stop_program>
